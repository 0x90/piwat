

-------- Grammar --------

rule 1 SourceElements: 
rule 2 SourceElements: SourceElementList
rule 3 SourceElementList: SourceElement
rule 4 SourceElementList: SourceElementList SourceElement
rule 5 SourceElement: FunctionDeclaration
rule 6 SourceElement: Statement
rule 7 Statement: Block
rule 8 Statement: VariableStatement
rule 9 Statement: ConstStatement
rule 10 Statement: EmptyStatement
rule 11 Statement: ExprStatement
rule 12 Statement: IfStatement
rule 13 Statement: IterationStatement
rule 14 Statement: ContinueStatement
rule 15 Statement: BreakStatement
rule 16 Statement: ReturnStatement
rule 17 Statement: WithStatement
rule 18 Statement: SwitchStatement
rule 19 Statement: LabelledStatement
rule 20 Statement: ThrowStatement
rule 21 Statement: TryStatement
rule 22 Statement: DebuggerStatement
rule 23 Literal: NULL
rule 24 Literal: TRUE
rule 25 Literal: FALSE
rule 26 Literal: NUMBER
rule 27 Literal: STRING
rule 28 Literal: REGEXP
rule 29 Property: IDENT ":" AssignmentExpr
rule 30 Property: STRING ":" AssignmentExpr
rule 31 Property: NUMBER ":" AssignmentExpr
rule 32 Property: IDENT IDENT "(" ")" "{" FunctionBody "}"
rule 33 Property: IDENT IDENT "(" FormalParameterList ")" "{" FunctionBody "}"
rule 34 PropertyList: Property
rule 35 PropertyList: PropertyList "," Property
rule 36 PrimaryExpr: PrimaryExprNoBrace
rule 37 PrimaryExpr: "{" "}"
rule 38 PrimaryExpr: "{" PropertyList "}"
rule 39 PrimaryExpr: "{" PropertyList "," "}"
rule 40 PrimaryExprNoBrace: THIS
rule 41 PrimaryExprNoBrace: Literal
rule 42 PrimaryExprNoBrace: ArrayLiteral
rule 43 PrimaryExprNoBrace: IDENT
rule 44 PrimaryExprNoBrace: "(" Expr ")"
rule 45 ArrayLiteral: "[" ElisionOpt "]"
rule 46 ArrayLiteral: "[" ElementList "]"
rule 47 ArrayLiteral: "[" ElementList "," ElisionOpt "]"
rule 48 ElementList: ElisionOpt AssignmentExpr
rule 49 ElementList: ElementList "," ElisionOpt AssignmentExpr
rule 50 ElisionOpt: 
rule 51 ElisionOpt: Elision
rule 52 Elision: ","
rule 53 Elision: Elision ","
rule 54 MemberExpr: PrimaryExpr
rule 55 MemberExpr: FunctionExpr
rule 56 MemberExpr: MemberExpr "[" Expr "]"
rule 57 MemberExpr: MemberExpr "." IDENT
rule 58 MemberExpr: NEW MemberExpr Arguments
rule 59 MemberExprNoBF: PrimaryExprNoBrace
rule 60 MemberExprNoBF: MemberExprNoBF "[" Expr "]"
rule 61 MemberExprNoBF: MemberExprNoBF "." IDENT
rule 62 MemberExprNoBF: NEW MemberExpr Arguments
rule 63 NewExpr: MemberExpr
rule 64 NewExpr: NEW NewExpr
rule 65 NewExprNoBF: MemberExprNoBF
rule 66 NewExprNoBF: NEW NewExpr
rule 67 CallExpr: MemberExpr Arguments
rule 68 CallExpr: CallExpr Arguments
rule 69 CallExpr: CallExpr "[" Expr "]"
rule 70 CallExpr: CallExpr "." IDENT
rule 71 CallExprNoBF: MemberExprNoBF Arguments
rule 72 CallExprNoBF: CallExprNoBF Arguments
rule 73 CallExprNoBF: CallExprNoBF "[" Expr "]"
rule 74 CallExprNoBF: CallExprNoBF "." IDENT
rule 75 Arguments: "(" ")"
rule 76 Arguments: "(" ArgumentList ")"
rule 77 ArgumentList: AssignmentExpr
rule 78 ArgumentList: ArgumentList "," AssignmentExpr
rule 79 LeftHandSideExpr: NewExpr
rule 80 LeftHandSideExpr: CallExpr
rule 81 LeftHandSideExprNoBF: NewExprNoBF
rule 82 LeftHandSideExprNoBF: CallExprNoBF
rule 83 PostfixExpr: LeftHandSideExpr
rule 84 PostfixExpr: LeftHandSideExpr PLUSPLUS
rule 85 PostfixExpr: LeftHandSideExpr MINUSMINUS
rule 86 PostfixExprNoBF: LeftHandSideExprNoBF
rule 87 PostfixExprNoBF: LeftHandSideExprNoBF PLUSPLUS
rule 88 PostfixExprNoBF: LeftHandSideExprNoBF MINUSMINUS
rule 89 UnaryExprCommon: DELETE UnaryExpr
rule 90 UnaryExprCommon: VOID UnaryExpr
rule 91 UnaryExprCommon: TYPEOF UnaryExpr
rule 92 UnaryExprCommon: PLUSPLUS UnaryExpr
rule 93 UnaryExprCommon: MINUSMINUS UnaryExpr
rule 94 UnaryExprCommon: "+" UnaryExpr
rule 95 UnaryExprCommon: "-" UnaryExpr
rule 96 UnaryExprCommon: "~" UnaryExpr
rule 97 UnaryExprCommon: "!" UnaryExpr
rule 98 UnaryExpr: PostfixExpr
rule 99 UnaryExpr: UnaryExprCommon
rule 100 UnaryExprNoBF: PostfixExprNoBF
rule 101 UnaryExprNoBF: UnaryExprCommon
rule 102 MultiplicativeExpr: UnaryExpr
rule 103 MultiplicativeExpr: MultiplicativeExpr "*" UnaryExpr
rule 104 MultiplicativeExpr: MultiplicativeExpr "/" UnaryExpr
rule 105 MultiplicativeExpr: MultiplicativeExpr "%" UnaryExpr
rule 106 MultiplicativeExprNoBF: UnaryExprNoBF
rule 107 MultiplicativeExprNoBF: MultiplicativeExprNoBF "*" UnaryExpr
rule 108 MultiplicativeExprNoBF: MultiplicativeExprNoBF "/" UnaryExpr
rule 109 MultiplicativeExprNoBF: MultiplicativeExprNoBF "%" UnaryExpr
rule 110 AdditiveExpr: MultiplicativeExpr
rule 111 AdditiveExpr: AdditiveExpr "+" MultiplicativeExpr
rule 112 AdditiveExpr: AdditiveExpr "-" MultiplicativeExpr
rule 113 AdditiveExprNoBF: MultiplicativeExprNoBF
rule 114 AdditiveExprNoBF: AdditiveExprNoBF "+" MultiplicativeExpr
rule 115 AdditiveExprNoBF: AdditiveExprNoBF "-" MultiplicativeExpr
rule 116 ShiftExpr: AdditiveExpr
rule 117 ShiftExpr: ShiftExpr LSHIFT AdditiveExpr
rule 118 ShiftExpr: ShiftExpr RSHIFT AdditiveExpr
rule 119 ShiftExpr: ShiftExpr URSHIFT AdditiveExpr
rule 120 ShiftExprNoBF: AdditiveExprNoBF
rule 121 ShiftExprNoBF: ShiftExprNoBF LSHIFT AdditiveExpr
rule 122 ShiftExprNoBF: ShiftExprNoBF RSHIFT AdditiveExpr
rule 123 ShiftExprNoBF: ShiftExprNoBF URSHIFT AdditiveExpr
rule 124 RelationalExpr: ShiftExpr
rule 125 RelationalExpr: RelationalExpr "<" ShiftExpr
rule 126 RelationalExpr: RelationalExpr ">" ShiftExpr
rule 127 RelationalExpr: RelationalExpr LE ShiftExpr
rule 128 RelationalExpr: RelationalExpr GE ShiftExpr
rule 129 RelationalExpr: RelationalExpr INSTANCEOF ShiftExpr
rule 130 RelationalExpr: RelationalExpr IN ShiftExpr
rule 131 RelationalExprNoIn: ShiftExpr
rule 132 RelationalExprNoIn: RelationalExprNoIn "<" ShiftExpr
rule 133 RelationalExprNoIn: RelationalExprNoIn ">" ShiftExpr
rule 134 RelationalExprNoIn: RelationalExprNoIn LE ShiftExpr
rule 135 RelationalExprNoIn: RelationalExprNoIn GE ShiftExpr
rule 136 RelationalExprNoIn: RelationalExprNoIn INSTANCEOF ShiftExpr
rule 137 RelationalExprNoBF: ShiftExprNoBF
rule 138 RelationalExprNoBF: RelationalExprNoBF "<" ShiftExpr
rule 139 RelationalExprNoBF: RelationalExprNoBF ">" ShiftExpr
rule 140 RelationalExprNoBF: RelationalExprNoBF LE ShiftExpr
rule 141 RelationalExprNoBF: RelationalExprNoBF GE ShiftExpr
rule 142 RelationalExprNoBF: RelationalExprNoBF INSTANCEOF ShiftExpr
rule 143 RelationalExprNoBF: RelationalExprNoBF IN ShiftExpr
rule 144 EqualityExpr: RelationalExpr
rule 145 EqualityExpr: EqualityExpr EQEQ RelationalExpr
rule 146 EqualityExpr: EqualityExpr NE RelationalExpr
rule 147 EqualityExpr: EqualityExpr STREQ RelationalExpr
rule 148 EqualityExpr: EqualityExpr STRNEQ RelationalExpr
rule 149 EqualityExprNoIn: RelationalExprNoIn
rule 150 EqualityExprNoIn: EqualityExprNoIn EQEQ RelationalExprNoIn
rule 151 EqualityExprNoIn: EqualityExprNoIn NE RelationalExprNoIn
rule 152 EqualityExprNoIn: EqualityExprNoIn STREQ RelationalExprNoIn
rule 153 EqualityExprNoIn: EqualityExprNoIn STRNEQ RelationalExprNoIn
rule 154 EqualityExprNoBF: RelationalExprNoBF
rule 155 EqualityExprNoBF: EqualityExprNoBF EQEQ RelationalExpr
rule 156 EqualityExprNoBF: EqualityExprNoBF NE RelationalExpr
rule 157 EqualityExprNoBF: EqualityExprNoBF STREQ RelationalExpr
rule 158 EqualityExprNoBF: EqualityExprNoBF STRNEQ RelationalExpr
rule 159 BitwiseANDExpr: EqualityExpr
rule 160 BitwiseANDExpr: BitwiseANDExpr "&" EqualityExpr
rule 161 BitwiseANDExprNoIn: EqualityExprNoIn
rule 162 BitwiseANDExprNoIn: BitwiseANDExprNoIn "&" EqualityExprNoIn
rule 163 BitwiseANDExprNoBF: EqualityExprNoBF
rule 164 BitwiseANDExprNoBF: BitwiseANDExprNoBF "&" EqualityExpr
rule 165 BitwiseXORExpr: BitwiseANDExpr
rule 166 BitwiseXORExpr: BitwiseXORExpr "^" BitwiseANDExpr
rule 167 BitwiseXORExprNoIn: BitwiseANDExprNoIn
rule 168 BitwiseXORExprNoIn: BitwiseXORExprNoIn "^" BitwiseANDExprNoIn
rule 169 BitwiseXORExprNoBF: BitwiseANDExprNoBF
rule 170 BitwiseXORExprNoBF: BitwiseXORExprNoBF "^" BitwiseANDExpr
rule 171 BitwiseORExpr: BitwiseXORExpr
rule 172 BitwiseORExpr: BitwiseORExpr "|" BitwiseXORExpr
rule 173 BitwiseORExprNoIn: BitwiseXORExprNoIn
rule 174 BitwiseORExprNoIn: BitwiseORExprNoIn "|" BitwiseXORExprNoIn
rule 175 BitwiseORExprNoBF: BitwiseXORExprNoBF
rule 176 BitwiseORExprNoBF: BitwiseORExprNoBF "|" BitwiseXORExpr
rule 177 LogicalANDExpr: BitwiseORExpr
rule 178 LogicalANDExpr: LogicalANDExpr AND BitwiseORExpr
rule 179 LogicalANDExprNoIn: BitwiseORExprNoIn
rule 180 LogicalANDExprNoIn: LogicalANDExprNoIn AND BitwiseORExprNoIn
rule 181 LogicalANDExprNoBF: BitwiseORExprNoBF
rule 182 LogicalANDExprNoBF: LogicalANDExprNoBF AND BitwiseORExpr
rule 183 LogicalORExpr: LogicalANDExpr
rule 184 LogicalORExpr: LogicalORExpr OR LogicalANDExpr
rule 185 LogicalORExprNoIn: LogicalANDExprNoIn
rule 186 LogicalORExprNoIn: LogicalORExprNoIn OR LogicalANDExprNoIn
rule 187 LogicalORExprNoBF: LogicalANDExprNoBF
rule 188 LogicalORExprNoBF: LogicalORExprNoBF OR LogicalANDExpr
rule 189 ConditionalExpr: LogicalORExpr
rule 190 ConditionalExpr: LogicalORExpr "?" AssignmentExpr ":" AssignmentExpr
rule 191 ConditionalExprNoIn: LogicalORExprNoIn
rule 192 ConditionalExprNoIn: LogicalORExprNoIn "?" AssignmentExprNoIn ":" AssignmentExprNoIn
rule 193 ConditionalExprNoBF: LogicalORExprNoBF
rule 194 ConditionalExprNoBF: LogicalORExprNoBF "?" AssignmentExpr ":" AssignmentExpr
rule 195 AssignmentExpr: ConditionalExpr
rule 196 AssignmentExpr: LeftHandSideExpr AssignmentOperator AssignmentExpr
rule 197 AssignmentExprNoIn: ConditionalExprNoIn
rule 198 AssignmentExprNoIn: LeftHandSideExpr AssignmentOperator AssignmentExprNoIn
rule 199 AssignmentExprNoBF: ConditionalExprNoBF
rule 200 AssignmentExprNoBF: LeftHandSideExprNoBF AssignmentOperator AssignmentExpr
rule 201 AssignmentOperator: "="
rule 202 AssignmentOperator: PLUSEQUAL
rule 203 AssignmentOperator: MINUSEQUAL
rule 204 AssignmentOperator: MULTEQUAL
rule 205 AssignmentOperator: DIVEQUAL
rule 206 AssignmentOperator: LSHIFTEQUAL
rule 207 AssignmentOperator: RSHIFTEQUAL
rule 208 AssignmentOperator: URSHIFTEQUAL
rule 209 AssignmentOperator: ANDEQUAL
rule 210 AssignmentOperator: XOREQUAL
rule 211 AssignmentOperator: OREQUAL
rule 212 AssignmentOperator: MODEQUAL
rule 213 Expr: AssignmentExpr
rule 214 Expr: Expr "," AssignmentExpr
rule 215 ExprNoIn: AssignmentExprNoIn
rule 216 ExprNoIn: ExprNoIn "," AssignmentExprNoIn
rule 217 ExprNoBF: AssignmentExprNoBF
rule 218 ExprNoBF: ExprNoBF "," AssignmentExpr
rule 219 Block: "{" SourceElements "}"
rule 220 VariableStatement: VAR VariableDeclarationList ";"
rule 221 VariableStatement: VAR VariableDeclarationList error
rule 222 VariableDeclarationList: VariableDeclaration
rule 223 VariableDeclarationList: VariableDeclarationList "," VariableDeclaration
rule 224 VariableDeclarationListNoIn: VariableDeclarationNoIn
rule 225 VariableDeclarationListNoIn: VariableDeclarationListNoIn "," VariableDeclarationNoIn
rule 226 VariableDeclaration: IDENT
rule 227 VariableDeclaration: IDENT Initializer
rule 228 VariableDeclarationNoIn: IDENT
rule 229 VariableDeclarationNoIn: IDENT InitializerNoIn
rule 230 ConstStatement: CONST ConstDeclarationList ";"
rule 231 ConstStatement: CONST ConstDeclarationList error
rule 232 ConstDeclarationList: ConstDeclaration
rule 233 ConstDeclarationList: ConstDeclarationList "," ConstDeclaration
rule 234 ConstDeclaration: IDENT
rule 235 ConstDeclaration: IDENT Initializer
rule 236 Initializer: "=" AssignmentExpr
rule 237 InitializerNoIn: "=" AssignmentExprNoIn
rule 238 EmptyStatement: ";"
rule 239 ExprStatement: ExprNoBF ";"
rule 240 ExprStatement: ExprNoBF error
rule 241 IfStatement: IF "(" Expr ")" Statement
rule 242 IfStatement: IF "(" Expr ")" Statement ELSE Statement
rule 243 IterationStatement: DO Statement WHILE "(" Expr ")" ";"
rule 244 IterationStatement: DO Statement WHILE "(" Expr ")" error
rule 245 IterationStatement: WHILE "(" Expr ")" Statement
rule 246 IterationStatement: FOR "(" ExprNoInOpt ";" ExprOpt ";" ExprOpt ")" Statement
rule 247 IterationStatement: FOR "(" VAR VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt ")" Statement
rule 248 IterationStatement: FOR "(" LeftHandSideExpr IN Expr ")" Statement
rule 249 IterationStatement: FOR "(" VAR IDENT IN Expr ")" Statement
rule 250 IterationStatement: FOR "(" VAR IDENT InitializerNoIn IN Expr ")" Statement
rule 251 ExprOpt: 
rule 252 ExprOpt: Expr
rule 253 ExprNoInOpt: 
rule 254 ExprNoInOpt: ExprNoIn
rule 255 ContinueStatement: CONTINUE ";"
rule 256 ContinueStatement: CONTINUE error
rule 257 ContinueStatement: CONTINUE IDENT ";"
rule 258 ContinueStatement: CONTINUE IDENT error
rule 259 BreakStatement: BREAK ";"
rule 260 BreakStatement: BREAK error
rule 261 BreakStatement: BREAK IDENT ";"
rule 262 BreakStatement: BREAK IDENT error
rule 263 ReturnStatement: RETURN ";"
rule 264 ReturnStatement: RETURN error
rule 265 ReturnStatement: RETURN Expr ";"
rule 266 ReturnStatement: RETURN Expr error
rule 267 WithStatement: WITH "(" Expr ")" Statement
rule 268 SwitchStatement: SWITCH "(" Expr ")" CaseBlock
rule 269 CaseBlock: "{" CaseClausesOpt "}"
rule 270 CaseBlock: "{" CaseClausesOpt DefaultClause CaseClausesOpt "}"
rule 271 CaseClausesOpt: 
rule 272 CaseClausesOpt: CaseClauses
rule 273 CaseClauses: CaseClause
rule 274 CaseClauses: CaseClauses CaseClause
rule 275 CaseClause: CASE Expr ":" SourceElements
rule 276 DefaultClause: DEFAULT ":" SourceElements
rule 277 LabelledStatement: IDENT ":" Statement
rule 278 ThrowStatement: THROW Expr ";"
rule 279 ThrowStatement: THROW Expr error
rule 280 TryStatement: TRY Block FINALLY Block
rule 281 TryStatement: TRY Block CATCH "(" IDENT ")" Block
rule 282 TryStatement: TRY Block CATCH "(" IDENT ")" Block FINALLY Block
rule 283 DebuggerStatement: DEBUGGER ";"
rule 284 DebuggerStatement: DEBUGGER error
rule 285 FunctionDeclaration: FUNCTION IDENT "(" ")" "{" FunctionBody "}"
rule 286 FunctionDeclaration: FUNCTION IDENT "(" FormalParameterList ")" "{" FunctionBody "}"
rule 287 FunctionExpr: FUNCTION "(" ")" "{" FunctionBody "}"
rule 288 FunctionExpr: FUNCTION "(" FormalParameterList ")" "{" FunctionBody "}"
rule 289 FunctionExpr: FUNCTION IDENT "(" ")" "{" FunctionBody "}"
rule 290 FunctionExpr: FUNCTION IDENT "(" FormalParameterList ")" "{" FunctionBody "}"
rule 291 FormalParameterList: IDENT
rule 292 FormalParameterList: FormalParameterList "," IDENT
rule 293 FunctionBody: SourceElements

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (88)
    on right: 
    on left : 
  SourceElements (89)
    on right: 219 275 276 293
    on left : 1 2
  SourceElementList (90)
    on right: 2 4
    on left : 3 4
  SourceElement (91)
    on right: 3 4
    on left : 5 6
  FunctionDeclaration (92)
    on right: 5
    on left : 285 286
  Statement (93)
    on right: 6 241 242 243 244 245 246 247 248 249 250 267 277
    on left : 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
  Block (94)
    on right: 7 280 281 282
    on left : 219
  VariableStatement (95)
    on right: 8
    on left : 220 221
  ConstStatement (96)
    on right: 9
    on left : 230 231
  EmptyStatement (97)
    on right: 10
    on left : 238
  ExprStatement (98)
    on right: 11
    on left : 239 240
  IfStatement (99)
    on right: 12
    on left : 241 242
  IterationStatement (100)
    on right: 13
    on left : 243 244 245 246 247 248 249 250
  ContinueStatement (101)
    on right: 14
    on left : 255 256 257 258
  BreakStatement (102)
    on right: 15
    on left : 259 260 261 262
  ReturnStatement (103)
    on right: 16
    on left : 263 264 265 266
  WithStatement (104)
    on right: 17
    on left : 267
  SwitchStatement (105)
    on right: 18
    on left : 268
  LabelledStatement (106)
    on right: 19
    on left : 277
  ThrowStatement (107)
    on right: 20
    on left : 278 279
  TryStatement (108)
    on right: 21
    on left : 280 281 282
  DebuggerStatement (109)
    on right: 22
    on left : 283 284
  Literal (110)
    on right: 41
    on left : 23 24 25 26 27 28
  Property (111)
    on right: 34 35
    on left : 29 30 31 32 33
  AssignmentExpr (112)
    on right: 29 30 31 48 49 77 78 190 194 196 200 213 214 218 236
    on left : 195 196
  FunctionBody (113)
    on right: 32 33 285 286 287 288 289 290
    on left : 293
  FormalParameterList (114)
    on right: 33 286 288 290 292
    on left : 291 292
  PropertyList (115)
    on right: 35 38 39
    on left : 34 35
  PrimaryExpr (116)
    on right: 54
    on left : 36 37 38 39
  PrimaryExprNoBrace (117)
    on right: 36 59
    on left : 40 41 42 43 44
  ArrayLiteral (118)
    on right: 42
    on left : 45 46 47
  Expr (119)
    on right: 44 56 60 69 73 214 241 242 243 244 245 248 249 250 252 265 266 267 268 275 278 279
    on left : 213 214
  ElisionOpt (120)
    on right: 45 47 48 49
    on left : 50 51
  ElementList (121)
    on right: 46 47 49
    on left : 48 49
  Elision (122)
    on right: 51 53
    on left : 52 53
  MemberExpr (123)
    on right: 56 57 58 62 63 67
    on left : 54 55 56 57 58
  FunctionExpr (124)
    on right: 55
    on left : 287 288 289 290
  Arguments (125)
    on right: 58 62 67 68 71 72
    on left : 75 76
  MemberExprNoBF (126)
    on right: 60 61 65 71
    on left : 59 60 61 62
  NewExpr (127)
    on right: 64 66 79
    on left : 63 64
  NewExprNoBF (128)
    on right: 81
    on left : 65 66
  CallExpr (129)
    on right: 68 69 70 80
    on left : 67 68 69 70
  CallExprNoBF (130)
    on right: 72 73 74 82
    on left : 71 72 73 74
  ArgumentList (131)
    on right: 76 78
    on left : 77 78
  LeftHandSideExpr (132)
    on right: 83 84 85 196 198 248
    on left : 79 80
  LeftHandSideExprNoBF (133)
    on right: 86 87 88 200
    on left : 81 82
  PostfixExpr (134)
    on right: 98
    on left : 83 84 85
  PostfixExprNoBF (135)
    on right: 100
    on left : 86 87 88
  UnaryExprCommon (136)
    on right: 99 101
    on left : 89 90 91 92 93 94 95 96 97
  UnaryExpr (137)
    on right: 89 90 91 92 93 94 95 96 97 102 103 104 105 107 108 109
    on left : 98 99
  UnaryExprNoBF (138)
    on right: 106
    on left : 100 101
  MultiplicativeExpr (139)
    on right: 103 104 105 110 111 112 114 115
    on left : 102 103 104 105
  MultiplicativeExprNoBF (140)
    on right: 107 108 109 113
    on left : 106 107 108 109
  AdditiveExpr (141)
    on right: 111 112 116 117 118 119 121 122 123
    on left : 110 111 112
  AdditiveExprNoBF (142)
    on right: 114 115 120
    on left : 113 114 115
  ShiftExpr (143)
    on right: 117 118 119 124 125 126 127 128 129 130 131 132 133 134 135 136 138 139 140 141 142 143
    on left : 116 117 118 119
  ShiftExprNoBF (144)
    on right: 121 122 123 137
    on left : 120 121 122 123
  RelationalExpr (145)
    on right: 125 126 127 128 129 130 144 145 146 147 148 155 156 157 158
    on left : 124 125 126 127 128 129 130
  RelationalExprNoIn (146)
    on right: 132 133 134 135 136 149 150 151 152 153
    on left : 131 132 133 134 135 136
  RelationalExprNoBF (147)
    on right: 138 139 140 141 142 143 154
    on left : 137 138 139 140 141 142 143
  EqualityExpr (148)
    on right: 145 146 147 148 159 160 164
    on left : 144 145 146 147 148
  EqualityExprNoIn (149)
    on right: 150 151 152 153 161 162
    on left : 149 150 151 152 153
  EqualityExprNoBF (150)
    on right: 155 156 157 158 163
    on left : 154 155 156 157 158
  BitwiseANDExpr (151)
    on right: 160 165 166 170
    on left : 159 160
  BitwiseANDExprNoIn (152)
    on right: 162 167 168
    on left : 161 162
  BitwiseANDExprNoBF (153)
    on right: 164 169
    on left : 163 164
  BitwiseXORExpr (154)
    on right: 166 171 172 176
    on left : 165 166
  BitwiseXORExprNoIn (155)
    on right: 168 173 174
    on left : 167 168
  BitwiseXORExprNoBF (156)
    on right: 170 175
    on left : 169 170
  BitwiseORExpr (157)
    on right: 172 177 178 182
    on left : 171 172
  BitwiseORExprNoIn (158)
    on right: 174 179 180
    on left : 173 174
  BitwiseORExprNoBF (159)
    on right: 176 181
    on left : 175 176
  LogicalANDExpr (160)
    on right: 178 183 184 188
    on left : 177 178
  LogicalANDExprNoIn (161)
    on right: 180 185 186
    on left : 179 180
  LogicalANDExprNoBF (162)
    on right: 182 187
    on left : 181 182
  LogicalORExpr (163)
    on right: 184 189 190
    on left : 183 184
  LogicalORExprNoIn (164)
    on right: 186 191 192
    on left : 185 186
  LogicalORExprNoBF (165)
    on right: 188 193 194
    on left : 187 188
  ConditionalExpr (166)
    on right: 195
    on left : 189 190
  ConditionalExprNoIn (167)
    on right: 197
    on left : 191 192
  AssignmentExprNoIn (168)
    on right: 192 198 215 216 237
    on left : 197 198
  ConditionalExprNoBF (169)
    on right: 199
    on left : 193 194
  AssignmentOperator (170)
    on right: 196 198 200
    on left : 201 202 203 204 205 206 207 208 209 210 211 212
  AssignmentExprNoBF (171)
    on right: 217
    on left : 199 200
  ExprNoIn (172)
    on right: 216 254
    on left : 215 216
  ExprNoBF (173)
    on right: 218 239 240
    on left : 217 218
  VariableDeclarationList (174)
    on right: 220 221 223
    on left : 222 223
  VariableDeclaration (175)
    on right: 222 223
    on left : 226 227
  VariableDeclarationListNoIn (176)
    on right: 225 247
    on left : 224 225
  VariableDeclarationNoIn (177)
    on right: 224 225
    on left : 228 229
  Initializer (178)
    on right: 227 235
    on left : 236
  InitializerNoIn (179)
    on right: 229 250
    on left : 237
  ConstDeclarationList (180)
    on right: 230 231 233
    on left : 232 233
  ConstDeclaration (181)
    on right: 232 233
    on left : 234 235
  ExprNoInOpt (182)
    on right: 246
    on left : 253 254
  ExprOpt (183)
    on right: 246 247
    on left : 251 252
  CaseBlock (184)
    on right: 268
    on left : 269 270
  CaseClausesOpt (185)
    on right: 269 270
    on left : 271 272
  DefaultClause (186)
    on right: 270
    on left : 276
  CaseClauses (187)
    on right: 272 274
    on left : 273 274
  CaseClause (188)
    on right: 273 274
    on left : 275

**Terminals, with rules where they appear

  $end (0) 
  error (1) 221 231 240 244 256 258 260 262 264 266 279 284
  NULL (2) 23
  TRUE (3) 24
  FALSE (4) 25
  BREAK (5) 259 260 261 262
  CASE (6) 275
  CATCH (7) 281 282
  CONST (8) 230 231
  CONTINUE (9) 255 256 257 258
  DEBUGGER (10) 283 284
  DEFAULT (11) 276
  DELETE (12) 89
  DO (13) 243 244
  ELSE (14) 242
  ENUM (15) 
  FINALLY (16) 280 282
  FOR (17) 246 247 248 249 250
  FUNCTION (18) 285 286 287 288 289 290
  IF (19) 241 242
  IN (20) 130 143 248 249 250
  INSTANCEOF (21) 129 136 142
  NEW (22) 58 62 64 66
  RETURN (23) 263 264 265 266
  SWITCH (24) 268
  THIS (25) 40
  THROW (26) 278 279
  TRY (27) 280 281 282
  TYPEOF (28) 91
  VAR (29) 220 221 247 249 250
  VOID (30) 90
  WHILE (31) 243 244 245
  WITH (32) 267
  EQEQ (33) 145 150 155
  NE (34) 146 151 156
  STREQ (35) 147 152 157
  STRNEQ (36) 148 153 158
  LE (37) 127 134 140
  GE (38) 128 135 141
  OR (39) 184 186 188
  AND (40) 178 180 182
  PLUSPLUS (41) 84 87 92
  MINUSMINUS (42) 85 88 93
  LSHIFT (43) 117 121
  RSHIFT (44) 118 122
  URSHIFT (45) 119 123
  PLUSEQUAL (46) 202
  MINUSEQUAL (47) 203
  MULTEQUAL (48) 204
  DIVEQUAL (49) 205
  LSHIFTEQUAL (50) 206
  RSHIFTEQUAL (51) 207
  URSHIFTEQUAL (52) 208
  ANDEQUAL (53) 209
  MODEQUAL (54) 212
  XOREQUAL (55) 210
  OREQUAL (56) 211
  REGEXP (57) 28
  NUMBER (58) 26 31
  STRING (59) 27 30
  IDENT (60) 29 32 33 43 57 61 70 74 226 227 228 229 234 235 249 250 257 258 261 262 277 281 282 285 286 289 290 291 292
  AUTOPLUSPLUS (61) 
  AUTOMINUSMINUS (62) 
  IF_WITHOUT_ELSE (63) 
  ":" (64) 29 30 31 190 192 194 275 276 277
  "(" (65) 32 33 44 75 76 241 242 243 244 245 246 247 248 249 250 267 268 281 282 285 286 287 288 289 290
  ")" (66) 32 33 44 75 76 241 242 243 244 245 246 247 248 249 250 267 268 281 282 285 286 287 288 289 290
  "{" (67) 32 33 37 38 39 219 269 270 285 286 287 288 289 290
  "}" (68) 32 33 37 38 39 219 269 270 285 286 287 288 289 290
  "," (69) 35 39 47 49 52 53 78 214 216 218 223 225 233 292
  "[" (70) 45 46 47 56 60 69 73
  "]" (71) 45 46 47 56 60 69 73
  "." (72) 57 61 70 74
  "+" (73) 94 111 114
  "-" (74) 95 112 115
  "~" (75) 96
  "!" (76) 97
  "*" (77) 103 107
  "/" (78) 104 108
  "%" (79) 105 109
  "<" (80) 125 132 138
  ">" (81) 126 133 139
  "&" (82) 160 162 164
  "^" (83) 166 168 170
  "|" (84) 172 174 176
  "?" (85) 190 192 194
  "=" (86) 201 236 237
  ";" (87) 220 230 238 239 243 246 247 255 257 259 261 263 265 278 283

--------- State ---------

state 0


  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElements  go to state 1
  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64

state 1


  $end          shift, and go to state 82


state 2

   2) SourceElements : SourceElementList _
   4) SourceElementList : SourceElementList _ SourceElement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 2 (SourceElements)

  SourceElement  go to state 83
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64

state 3

   3) SourceElementList : SourceElement _

  $default      reduce using rule 3 (SourceElementList)


state 4

   5) SourceElement : FunctionDeclaration _

  $default      reduce using rule 5 (SourceElement)


state 5

   6) SourceElement : Statement _

  $default      reduce using rule 6 (SourceElement)


state 6

   7) Statement : Block _

  $default      reduce using rule 7 (Statement)


state 7

   8) Statement : VariableStatement _

  $default      reduce using rule 8 (Statement)


state 8

   9) Statement : ConstStatement _

  $default      reduce using rule 9 (Statement)


state 9

  10) Statement : EmptyStatement _

  $default      reduce using rule 10 (Statement)


state 10

  11) Statement : ExprStatement _

  $default      reduce using rule 11 (Statement)


state 11

  12) Statement : IfStatement _

  $default      reduce using rule 12 (Statement)


state 12

  13) Statement : IterationStatement _

  $default      reduce using rule 13 (Statement)


state 13

  14) Statement : ContinueStatement _

  $default      reduce using rule 14 (Statement)


state 14

  15) Statement : BreakStatement _

  $default      reduce using rule 15 (Statement)


state 15

  16) Statement : ReturnStatement _

  $default      reduce using rule 16 (Statement)


state 16

  17) Statement : WithStatement _

  $default      reduce using rule 17 (Statement)


state 17

  18) Statement : SwitchStatement _

  $default      reduce using rule 18 (Statement)


state 18

  19) Statement : LabelledStatement _

  $default      reduce using rule 19 (Statement)


state 19

  20) Statement : ThrowStatement _

  $default      reduce using rule 20 (Statement)


state 20

  21) Statement : TryStatement _

  $default      reduce using rule 21 (Statement)


state 21

  22) Statement : DebuggerStatement _

  $default      reduce using rule 22 (Statement)


state 22

  23) Literal : NULL _

  $default      reduce using rule 23 (Literal)


state 23

  24) Literal : TRUE _

  $default      reduce using rule 24 (Literal)


state 24

  25) Literal : FALSE _

  $default      reduce using rule 25 (Literal)


state 25

  26) Literal : NUMBER _

  $default      reduce using rule 26 (Literal)


state 26

  27) Literal : STRING _

  $default      reduce using rule 27 (Literal)


state 27

  28) Literal : REGEXP _

  $default      reduce using rule 28 (Literal)


state 28

  40) PrimaryExprNoBrace : THIS _

  $default      reduce using rule 40 (PrimaryExprNoBrace)


state 29

  41) PrimaryExprNoBrace : Literal _

  $default      reduce using rule 41 (PrimaryExprNoBrace)


state 30

  42) PrimaryExprNoBrace : ArrayLiteral _

  $default      reduce using rule 42 (PrimaryExprNoBrace)


state 31

  43) PrimaryExprNoBrace : IDENT _
 277) LabelledStatement : IDENT _ ":" Statement

  ":"           shift, and go to state 84
  $default      reduce using rule 43 (PrimaryExprNoBrace)


state 32

  44) PrimaryExprNoBrace : "(" _ Expr ")"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  Expr          go to state 88
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110

state 33

  45) ArrayLiteral : "[" _ ElisionOpt "]"
  46) ArrayLiteral : "[" _ ElementList "]"
  47) ArrayLiteral : "[" _ ElementList "," ElisionOpt "]"

  ","           shift, and go to state 115
  $default      reduce using rule 50 (ElisionOpt)

  ElisionOpt    go to state 112
  ElementList   go to state 113
  Elision       go to state 114

state 34

  59) MemberExprNoBF : PrimaryExprNoBrace _

  $default      reduce using rule 59 (MemberExprNoBF)


state 35

  60) MemberExprNoBF : MemberExprNoBF _ "[" Expr "]"
  61) MemberExprNoBF : MemberExprNoBF _ "." IDENT
  65) NewExprNoBF : MemberExprNoBF _
  71) CallExprNoBF : MemberExprNoBF _ Arguments

  "("           shift, and go to state 119
  "["           shift, and go to state 116
  "."           shift, and go to state 117
  $default      reduce using rule 65 (NewExprNoBF)

  Arguments     go to state 118

state 36

  62) MemberExprNoBF : NEW _ MemberExpr Arguments
  66) NewExprNoBF : NEW _ NewExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 120
  NewExpr       go to state 121

state 37

  72) CallExprNoBF : CallExprNoBF _ Arguments
  73) CallExprNoBF : CallExprNoBF _ "[" Expr "]"
  74) CallExprNoBF : CallExprNoBF _ "." IDENT
  82) LeftHandSideExprNoBF : CallExprNoBF _

  "("           shift, and go to state 119
  "["           shift, and go to state 123
  "."           shift, and go to state 124
  $default      reduce using rule 82 (LeftHandSideExprNoBF)

  Arguments     go to state 122

state 38

  81) LeftHandSideExprNoBF : NewExprNoBF _

  $default      reduce using rule 81 (LeftHandSideExprNoBF)


state 39

  86) PostfixExprNoBF : LeftHandSideExprNoBF _
  87) PostfixExprNoBF : LeftHandSideExprNoBF _ PLUSPLUS
  88) PostfixExprNoBF : LeftHandSideExprNoBF _ MINUSMINUS
 200) AssignmentExprNoBF : LeftHandSideExprNoBF _ AssignmentOperator AssignmentExpr

  PLUSPLUS      shift, and go to state 125
  MINUSMINUS    shift, and go to state 126
  PLUSEQUAL     shift, and go to state 129
  MINUSEQUAL    shift, and go to state 130
  MULTEQUAL     shift, and go to state 131
  DIVEQUAL      shift, and go to state 132
  LSHIFTEQUAL   shift, and go to state 133
  RSHIFTEQUAL   shift, and go to state 134
  URSHIFTEQUAL  shift, and go to state 135
  ANDEQUAL      shift, and go to state 136
  MODEQUAL      shift, and go to state 139
  XOREQUAL      shift, and go to state 137
  OREQUAL       shift, and go to state 138
  "="           shift, and go to state 128
  $default      reduce using rule 86 (PostfixExprNoBF)

  AssignmentOperator  go to state 127

state 40

  89) UnaryExprCommon : DELETE _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 141
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 41

  90) UnaryExprCommon : VOID _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 142
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 42

  91) UnaryExprCommon : TYPEOF _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 143
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 43

  92) UnaryExprCommon : PLUSPLUS _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 144
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 44

  93) UnaryExprCommon : MINUSMINUS _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 145
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 45

  94) UnaryExprCommon : "+" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 146
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 46

  95) UnaryExprCommon : "-" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 147
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 47

  96) UnaryExprCommon : "~" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 148
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 48

  97) UnaryExprCommon : "!" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  UnaryExpr     go to state 149
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97

state 49

 100) UnaryExprNoBF : PostfixExprNoBF _

  $default      reduce using rule 100 (UnaryExprNoBF)


state 50

 101) UnaryExprNoBF : UnaryExprCommon _

  $default      reduce using rule 101 (UnaryExprNoBF)


state 51

 106) MultiplicativeExprNoBF : UnaryExprNoBF _

  $default      reduce using rule 106 (MultiplicativeExprNoBF)


state 52

 107) MultiplicativeExprNoBF : MultiplicativeExprNoBF _ "*" UnaryExpr
 108) MultiplicativeExprNoBF : MultiplicativeExprNoBF _ "/" UnaryExpr
 109) MultiplicativeExprNoBF : MultiplicativeExprNoBF _ "%" UnaryExpr
 113) AdditiveExprNoBF : MultiplicativeExprNoBF _

  "*"           shift, and go to state 150
  "/"           shift, and go to state 151
  "%"           shift, and go to state 152
  $default      reduce using rule 113 (AdditiveExprNoBF)


state 53

 114) AdditiveExprNoBF : AdditiveExprNoBF _ "+" MultiplicativeExpr
 115) AdditiveExprNoBF : AdditiveExprNoBF _ "-" MultiplicativeExpr
 120) ShiftExprNoBF : AdditiveExprNoBF _

  "+"           shift, and go to state 153
  "-"           shift, and go to state 154
  $default      reduce using rule 120 (ShiftExprNoBF)


state 54

 121) ShiftExprNoBF : ShiftExprNoBF _ LSHIFT AdditiveExpr
 122) ShiftExprNoBF : ShiftExprNoBF _ RSHIFT AdditiveExpr
 123) ShiftExprNoBF : ShiftExprNoBF _ URSHIFT AdditiveExpr
 137) RelationalExprNoBF : ShiftExprNoBF _

  LSHIFT        shift, and go to state 155
  RSHIFT        shift, and go to state 156
  URSHIFT       shift, and go to state 157
  $default      reduce using rule 137 (RelationalExprNoBF)


state 55

 138) RelationalExprNoBF : RelationalExprNoBF _ "<" ShiftExpr
 139) RelationalExprNoBF : RelationalExprNoBF _ ">" ShiftExpr
 140) RelationalExprNoBF : RelationalExprNoBF _ LE ShiftExpr
 141) RelationalExprNoBF : RelationalExprNoBF _ GE ShiftExpr
 142) RelationalExprNoBF : RelationalExprNoBF _ INSTANCEOF ShiftExpr
 143) RelationalExprNoBF : RelationalExprNoBF _ IN ShiftExpr
 154) EqualityExprNoBF : RelationalExprNoBF _

  IN            shift, and go to state 163
  INSTANCEOF    shift, and go to state 162
  LE            shift, and go to state 160
  GE            shift, and go to state 161
  "<"           shift, and go to state 158
  ">"           shift, and go to state 159
  $default      reduce using rule 154 (EqualityExprNoBF)


state 56

 155) EqualityExprNoBF : EqualityExprNoBF _ EQEQ RelationalExpr
 156) EqualityExprNoBF : EqualityExprNoBF _ NE RelationalExpr
 157) EqualityExprNoBF : EqualityExprNoBF _ STREQ RelationalExpr
 158) EqualityExprNoBF : EqualityExprNoBF _ STRNEQ RelationalExpr
 163) BitwiseANDExprNoBF : EqualityExprNoBF _

  EQEQ          shift, and go to state 164
  NE            shift, and go to state 165
  STREQ         shift, and go to state 166
  STRNEQ        shift, and go to state 167
  $default      reduce using rule 163 (BitwiseANDExprNoBF)


state 57

 164) BitwiseANDExprNoBF : BitwiseANDExprNoBF _ "&" EqualityExpr
 169) BitwiseXORExprNoBF : BitwiseANDExprNoBF _

  "&"           shift, and go to state 168
  $default      reduce using rule 169 (BitwiseXORExprNoBF)


state 58

 170) BitwiseXORExprNoBF : BitwiseXORExprNoBF _ "^" BitwiseANDExpr
 175) BitwiseORExprNoBF : BitwiseXORExprNoBF _

  "^"           shift, and go to state 169
  $default      reduce using rule 175 (BitwiseORExprNoBF)


state 59

 176) BitwiseORExprNoBF : BitwiseORExprNoBF _ "|" BitwiseXORExpr
 181) LogicalANDExprNoBF : BitwiseORExprNoBF _

  "|"           shift, and go to state 170
  $default      reduce using rule 181 (LogicalANDExprNoBF)


state 60

 182) LogicalANDExprNoBF : LogicalANDExprNoBF _ AND BitwiseORExpr
 187) LogicalORExprNoBF : LogicalANDExprNoBF _

  AND           shift, and go to state 171
  $default      reduce using rule 187 (LogicalORExprNoBF)


state 61

 188) LogicalORExprNoBF : LogicalORExprNoBF _ OR LogicalANDExpr
 193) ConditionalExprNoBF : LogicalORExprNoBF _
 194) ConditionalExprNoBF : LogicalORExprNoBF _ "?" AssignmentExpr ":" AssignmentExpr

  OR            shift, and go to state 172
  "?"           shift, and go to state 173
  $default      reduce using rule 193 (ConditionalExprNoBF)


state 62

 199) AssignmentExprNoBF : ConditionalExprNoBF _

  $default      reduce using rule 199 (AssignmentExprNoBF)


state 63

 217) ExprNoBF : AssignmentExprNoBF _

  $default      reduce using rule 217 (ExprNoBF)


state 64

 218) ExprNoBF : ExprNoBF _ "," AssignmentExpr
 239) ExprStatement : ExprNoBF _ ";"
 240) ExprStatement : ExprNoBF _ error

  error         shift, and go to state 176
  ","           shift, and go to state 174
  ";"           shift, and go to state 175


state 65

 219) Block : "{" _ SourceElements "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  SourceElements  go to state 177

state 66

 220) VariableStatement : VAR _ VariableDeclarationList ";"
 221) VariableStatement : VAR _ VariableDeclarationList error

  IDENT         shift, and go to state 180

  VariableDeclarationList  go to state 178
  VariableDeclaration  go to state 179

state 67

 230) ConstStatement : CONST _ ConstDeclarationList ";"
 231) ConstStatement : CONST _ ConstDeclarationList error

  IDENT         shift, and go to state 183

  ConstDeclarationList  go to state 181
  ConstDeclaration  go to state 182

state 68

 238) EmptyStatement : ";" _

  $default      reduce using rule 238 (EmptyStatement)


state 69

 241) IfStatement : IF _ "(" Expr ")" Statement
 242) IfStatement : IF _ "(" Expr ")" Statement ELSE Statement

  "("           shift, and go to state 184


state 70

 243) IterationStatement : DO _ Statement WHILE "(" Expr ")" ";"
 244) IterationStatement : DO _ Statement WHILE "(" Expr ")" error

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 185

state 71

 245) IterationStatement : WHILE _ "(" Expr ")" Statement

  "("           shift, and go to state 186


state 72

 246) IterationStatement : FOR _ "(" ExprNoInOpt ";" ExprOpt ";" ExprOpt ")" Statement
 247) IterationStatement : FOR _ "(" VAR VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt ")" Statement
 248) IterationStatement : FOR _ "(" LeftHandSideExpr IN Expr ")" Statement
 249) IterationStatement : FOR _ "(" VAR IDENT IN Expr ")" Statement
 250) IterationStatement : FOR _ "(" VAR IDENT InitializerNoIn IN Expr ")" Statement

  "("           shift, and go to state 187


state 73

 255) ContinueStatement : CONTINUE _ ";"
 256) ContinueStatement : CONTINUE _ error
 257) ContinueStatement : CONTINUE _ IDENT ";"
 258) ContinueStatement : CONTINUE _ IDENT error

  error         shift, and go to state 189
  IDENT         shift, and go to state 190
  ";"           shift, and go to state 188


state 74

 259) BreakStatement : BREAK _ ";"
 260) BreakStatement : BREAK _ error
 261) BreakStatement : BREAK _ IDENT ";"
 262) BreakStatement : BREAK _ IDENT error

  error         shift, and go to state 192
  IDENT         shift, and go to state 193
  ";"           shift, and go to state 191


state 75

 263) ReturnStatement : RETURN _ ";"
 264) ReturnStatement : RETURN _ error
 265) ReturnStatement : RETURN _ Expr ";"
 266) ReturnStatement : RETURN _ Expr error

  error         shift, and go to state 196
  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 195

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 194

state 76

 267) WithStatement : WITH _ "(" Expr ")" Statement

  "("           shift, and go to state 197


state 77

 268) SwitchStatement : SWITCH _ "(" Expr ")" CaseBlock

  "("           shift, and go to state 198


state 78

 278) ThrowStatement : THROW _ Expr ";"
 279) ThrowStatement : THROW _ Expr error

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 199

state 79

 280) TryStatement : TRY _ Block FINALLY Block
 281) TryStatement : TRY _ Block CATCH "(" IDENT ")" Block
 282) TryStatement : TRY _ Block CATCH "(" IDENT ")" Block FINALLY Block

  "{"           shift, and go to state 65

  Block         go to state 200

state 80

 283) DebuggerStatement : DEBUGGER _ ";"
 284) DebuggerStatement : DEBUGGER _ error

  error         shift, and go to state 202
  ";"           shift, and go to state 201


state 81

 285) FunctionDeclaration : FUNCTION _ IDENT "(" ")" "{" FunctionBody "}"
 286) FunctionDeclaration : FUNCTION _ IDENT "(" FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 203


state 82


  $end          shift, and go to state 204


state 83

   4) SourceElementList : SourceElementList SourceElement _

  $default      reduce using rule 4 (SourceElementList)


state 84

 277) LabelledStatement : IDENT ":" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 205

state 85

  36) PrimaryExpr : PrimaryExprNoBrace _

  $default      reduce using rule 36 (PrimaryExpr)


state 86

  37) PrimaryExpr : "{" _ "}"
  38) PrimaryExpr : "{" _ PropertyList "}"
  39) PrimaryExpr : "{" _ PropertyList "," "}"

  NUMBER        shift, and go to state 208
  STRING        shift, and go to state 207
  IDENT         shift, and go to state 206
  "}"           shift, and go to state 211

  Property      go to state 209
  PropertyList  go to state 210

state 87

  43) PrimaryExprNoBrace : IDENT _

  $default      reduce using rule 43 (PrimaryExprNoBrace)


state 88

  44) PrimaryExprNoBrace : "(" Expr _ ")"
 214) Expr : Expr _ "," AssignmentExpr

  ")"           shift, and go to state 212
  ","           shift, and go to state 213


state 89

  54) MemberExpr : PrimaryExpr _

  $default      reduce using rule 54 (MemberExpr)


state 90

  55) MemberExpr : FunctionExpr _

  $default      reduce using rule 55 (MemberExpr)


state 91

  56) MemberExpr : MemberExpr _ "[" Expr "]"
  57) MemberExpr : MemberExpr _ "." IDENT
  63) NewExpr : MemberExpr _
  67) CallExpr : MemberExpr _ Arguments

  "("           shift, and go to state 119
  "["           shift, and go to state 214
  "."           shift, and go to state 215
  $default      reduce using rule 63 (NewExpr)

  Arguments     go to state 216

state 92

  58) MemberExpr : NEW _ MemberExpr Arguments
  64) NewExpr : NEW _ NewExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 217
  NewExpr       go to state 218

state 93

  68) CallExpr : CallExpr _ Arguments
  69) CallExpr : CallExpr _ "[" Expr "]"
  70) CallExpr : CallExpr _ "." IDENT
  80) LeftHandSideExpr : CallExpr _

  "("           shift, and go to state 119
  "["           shift, and go to state 220
  "."           shift, and go to state 221
  $default      reduce using rule 80 (LeftHandSideExpr)

  Arguments     go to state 219

state 94

  79) LeftHandSideExpr : NewExpr _

  $default      reduce using rule 79 (LeftHandSideExpr)


state 95

  83) PostfixExpr : LeftHandSideExpr _
  84) PostfixExpr : LeftHandSideExpr _ PLUSPLUS
  85) PostfixExpr : LeftHandSideExpr _ MINUSMINUS
 196) AssignmentExpr : LeftHandSideExpr _ AssignmentOperator AssignmentExpr

  PLUSPLUS      shift, and go to state 222
  MINUSMINUS    shift, and go to state 223
  PLUSEQUAL     shift, and go to state 129
  MINUSEQUAL    shift, and go to state 130
  MULTEQUAL     shift, and go to state 131
  DIVEQUAL      shift, and go to state 132
  LSHIFTEQUAL   shift, and go to state 133
  RSHIFTEQUAL   shift, and go to state 134
  URSHIFTEQUAL  shift, and go to state 135
  ANDEQUAL      shift, and go to state 136
  MODEQUAL      shift, and go to state 139
  XOREQUAL      shift, and go to state 137
  OREQUAL       shift, and go to state 138
  "="           shift, and go to state 128
  $default      reduce using rule 83 (PostfixExpr)

  AssignmentOperator  go to state 224

state 96

  98) UnaryExpr : PostfixExpr _

  $default      reduce using rule 98 (UnaryExpr)


state 97

  99) UnaryExpr : UnaryExprCommon _

  $default      reduce using rule 99 (UnaryExpr)


state 98

 102) MultiplicativeExpr : UnaryExpr _

  $default      reduce using rule 102 (MultiplicativeExpr)


state 99

 103) MultiplicativeExpr : MultiplicativeExpr _ "*" UnaryExpr
 104) MultiplicativeExpr : MultiplicativeExpr _ "/" UnaryExpr
 105) MultiplicativeExpr : MultiplicativeExpr _ "%" UnaryExpr
 110) AdditiveExpr : MultiplicativeExpr _

  "*"           shift, and go to state 225
  "/"           shift, and go to state 226
  "%"           shift, and go to state 227
  $default      reduce using rule 110 (AdditiveExpr)


state 100

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 116) ShiftExpr : AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 116 (ShiftExpr)


state 101

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 124) RelationalExpr : ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 124 (RelationalExpr)


state 102

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 144) EqualityExpr : RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 144 (EqualityExpr)


state 103

 145) EqualityExpr : EqualityExpr _ EQEQ RelationalExpr
 146) EqualityExpr : EqualityExpr _ NE RelationalExpr
 147) EqualityExpr : EqualityExpr _ STREQ RelationalExpr
 148) EqualityExpr : EqualityExpr _ STRNEQ RelationalExpr
 159) BitwiseANDExpr : EqualityExpr _

  EQEQ          shift, and go to state 239
  NE            shift, and go to state 240
  STREQ         shift, and go to state 241
  STRNEQ        shift, and go to state 242
  $default      reduce using rule 159 (BitwiseANDExpr)


state 104

 160) BitwiseANDExpr : BitwiseANDExpr _ "&" EqualityExpr
 165) BitwiseXORExpr : BitwiseANDExpr _

  "&"           shift, and go to state 243
  $default      reduce using rule 165 (BitwiseXORExpr)


state 105

 166) BitwiseXORExpr : BitwiseXORExpr _ "^" BitwiseANDExpr
 171) BitwiseORExpr : BitwiseXORExpr _

  "^"           shift, and go to state 244
  $default      reduce using rule 171 (BitwiseORExpr)


state 106

 172) BitwiseORExpr : BitwiseORExpr _ "|" BitwiseXORExpr
 177) LogicalANDExpr : BitwiseORExpr _

  "|"           shift, and go to state 245
  $default      reduce using rule 177 (LogicalANDExpr)


state 107

 178) LogicalANDExpr : LogicalANDExpr _ AND BitwiseORExpr
 183) LogicalORExpr : LogicalANDExpr _

  AND           shift, and go to state 246
  $default      reduce using rule 183 (LogicalORExpr)


state 108

 184) LogicalORExpr : LogicalORExpr _ OR LogicalANDExpr
 189) ConditionalExpr : LogicalORExpr _
 190) ConditionalExpr : LogicalORExpr _ "?" AssignmentExpr ":" AssignmentExpr

  OR            shift, and go to state 247
  "?"           shift, and go to state 248
  $default      reduce using rule 189 (ConditionalExpr)


state 109

 195) AssignmentExpr : ConditionalExpr _

  $default      reduce using rule 195 (AssignmentExpr)


state 110

 213) Expr : AssignmentExpr _

  $default      reduce using rule 213 (Expr)


state 111

 287) FunctionExpr : FUNCTION _ "(" ")" "{" FunctionBody "}"
 288) FunctionExpr : FUNCTION _ "(" FormalParameterList ")" "{" FunctionBody "}"
 289) FunctionExpr : FUNCTION _ IDENT "(" ")" "{" FunctionBody "}"
 290) FunctionExpr : FUNCTION _ IDENT "(" FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 250
  "("           shift, and go to state 249


state 112

  45) ArrayLiteral : "[" ElisionOpt _ "]"
  48) ElementList : ElisionOpt _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "]"           shift, and go to state 251
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  AssignmentExpr  go to state 252
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 113

  46) ArrayLiteral : "[" ElementList _ "]"
  47) ArrayLiteral : "[" ElementList _ "," ElisionOpt "]"
  49) ElementList : ElementList _ "," ElisionOpt AssignmentExpr

  ","           shift, and go to state 254
  "]"           shift, and go to state 253


state 114

  51) ElisionOpt : Elision _
  53) Elision : Elision _ ","

  ","           shift, and go to state 255
  $default      reduce using rule 51 (ElisionOpt)


state 115

  52) Elision : "," _

  $default      reduce using rule 52 (Elision)


state 116

  60) MemberExprNoBF : MemberExprNoBF "[" _ Expr "]"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  Expr          go to state 256
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110

state 117

  61) MemberExprNoBF : MemberExprNoBF "." _ IDENT

  IDENT         shift, and go to state 257


state 118

  71) CallExprNoBF : MemberExprNoBF Arguments _

  $default      reduce using rule 71 (CallExprNoBF)


state 119

  75) Arguments : "(" _ ")"
  76) Arguments : "(" _ ArgumentList ")"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  ")"           shift, and go to state 258
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  ArgumentList  go to state 259
  AssignmentExpr  go to state 260
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 120

  56) MemberExpr : MemberExpr _ "[" Expr "]"
  57) MemberExpr : MemberExpr _ "." IDENT
  62) MemberExprNoBF : NEW MemberExpr _ Arguments
  63) NewExpr : MemberExpr _

  "("           shift, and go to state 119
  "["           shift, and go to state 214
  "."           shift, and go to state 215
  $default      reduce using rule 63 (NewExpr)

  Arguments     go to state 261

state 121

  66) NewExprNoBF : NEW NewExpr _

  $default      reduce using rule 66 (NewExprNoBF)


state 122

  72) CallExprNoBF : CallExprNoBF Arguments _

  $default      reduce using rule 72 (CallExprNoBF)


state 123

  73) CallExprNoBF : CallExprNoBF "[" _ Expr "]"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  Expr          go to state 262
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110

state 124

  74) CallExprNoBF : CallExprNoBF "." _ IDENT

  IDENT         shift, and go to state 263


state 125

  87) PostfixExprNoBF : LeftHandSideExprNoBF PLUSPLUS _

  $default      reduce using rule 87 (PostfixExprNoBF)


state 126

  88) PostfixExprNoBF : LeftHandSideExprNoBF MINUSMINUS _

  $default      reduce using rule 88 (PostfixExprNoBF)


state 127

 200) AssignmentExprNoBF : LeftHandSideExprNoBF AssignmentOperator _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 264

state 128

 201) AssignmentOperator : "=" _

  $default      reduce using rule 201 (AssignmentOperator)


state 129

 202) AssignmentOperator : PLUSEQUAL _

  $default      reduce using rule 202 (AssignmentOperator)


state 130

 203) AssignmentOperator : MINUSEQUAL _

  $default      reduce using rule 203 (AssignmentOperator)


state 131

 204) AssignmentOperator : MULTEQUAL _

  $default      reduce using rule 204 (AssignmentOperator)


state 132

 205) AssignmentOperator : DIVEQUAL _

  $default      reduce using rule 205 (AssignmentOperator)


state 133

 206) AssignmentOperator : LSHIFTEQUAL _

  $default      reduce using rule 206 (AssignmentOperator)


state 134

 207) AssignmentOperator : RSHIFTEQUAL _

  $default      reduce using rule 207 (AssignmentOperator)


state 135

 208) AssignmentOperator : URSHIFTEQUAL _

  $default      reduce using rule 208 (AssignmentOperator)


state 136

 209) AssignmentOperator : ANDEQUAL _

  $default      reduce using rule 209 (AssignmentOperator)


state 137

 210) AssignmentOperator : XOREQUAL _

  $default      reduce using rule 210 (AssignmentOperator)


state 138

 211) AssignmentOperator : OREQUAL _

  $default      reduce using rule 211 (AssignmentOperator)


state 139

 212) AssignmentOperator : MODEQUAL _

  $default      reduce using rule 212 (AssignmentOperator)


state 140

  83) PostfixExpr : LeftHandSideExpr _
  84) PostfixExpr : LeftHandSideExpr _ PLUSPLUS
  85) PostfixExpr : LeftHandSideExpr _ MINUSMINUS

  PLUSPLUS      shift, and go to state 222
  MINUSMINUS    shift, and go to state 223
  $default      reduce using rule 83 (PostfixExpr)


state 141

  89) UnaryExprCommon : DELETE UnaryExpr _

  $default      reduce using rule 89 (UnaryExprCommon)


state 142

  90) UnaryExprCommon : VOID UnaryExpr _

  $default      reduce using rule 90 (UnaryExprCommon)


state 143

  91) UnaryExprCommon : TYPEOF UnaryExpr _

  $default      reduce using rule 91 (UnaryExprCommon)


state 144

  92) UnaryExprCommon : PLUSPLUS UnaryExpr _

  $default      reduce using rule 92 (UnaryExprCommon)


state 145

  93) UnaryExprCommon : MINUSMINUS UnaryExpr _

  $default      reduce using rule 93 (UnaryExprCommon)


state 146

  94) UnaryExprCommon : "+" UnaryExpr _

  $default      reduce using rule 94 (UnaryExprCommon)


state 147

  95) UnaryExprCommon : "-" UnaryExpr _

  $default      reduce using rule 95 (UnaryExprCommon)


state 148

  96) UnaryExprCommon : "~" UnaryExpr _

  $default      reduce using rule 96 (UnaryExprCommon)


state 149

  97) UnaryExprCommon : "!" UnaryExpr _

  $default      reduce using rule 97 (UnaryExprCommon)


state 150

 107) MultiplicativeExprNoBF : MultiplicativeExprNoBF "*" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 265

state 151

 108) MultiplicativeExprNoBF : MultiplicativeExprNoBF "/" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 266

state 152

 109) MultiplicativeExprNoBF : MultiplicativeExprNoBF "%" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 267

state 153

 114) AdditiveExprNoBF : AdditiveExprNoBF "+" _ MultiplicativeExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 268

state 154

 115) AdditiveExprNoBF : AdditiveExprNoBF "-" _ MultiplicativeExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 269

state 155

 121) ShiftExprNoBF : ShiftExprNoBF LSHIFT _ AdditiveExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 270

state 156

 122) ShiftExprNoBF : ShiftExprNoBF RSHIFT _ AdditiveExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 271

state 157

 123) ShiftExprNoBF : ShiftExprNoBF URSHIFT _ AdditiveExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 272

state 158

 138) RelationalExprNoBF : RelationalExprNoBF "<" _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 273

state 159

 139) RelationalExprNoBF : RelationalExprNoBF ">" _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 274

state 160

 140) RelationalExprNoBF : RelationalExprNoBF LE _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 275

state 161

 141) RelationalExprNoBF : RelationalExprNoBF GE _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 276

state 162

 142) RelationalExprNoBF : RelationalExprNoBF INSTANCEOF _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 277

state 163

 143) RelationalExprNoBF : RelationalExprNoBF IN _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 278

state 164

 155) EqualityExprNoBF : EqualityExprNoBF EQEQ _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 279

state 165

 156) EqualityExprNoBF : EqualityExprNoBF NE _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 280

state 166

 157) EqualityExprNoBF : EqualityExprNoBF STREQ _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 281

state 167

 158) EqualityExprNoBF : EqualityExprNoBF STRNEQ _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 282

state 168

 164) BitwiseANDExprNoBF : BitwiseANDExprNoBF "&" _ EqualityExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 283

state 169

 170) BitwiseXORExprNoBF : BitwiseXORExprNoBF "^" _ BitwiseANDExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 284

state 170

 176) BitwiseORExprNoBF : BitwiseORExprNoBF "|" _ BitwiseXORExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 285

state 171

 182) LogicalANDExprNoBF : LogicalANDExprNoBF AND _ BitwiseORExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 286

state 172

 188) LogicalORExprNoBF : LogicalORExprNoBF OR _ LogicalANDExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 287

state 173

 194) ConditionalExprNoBF : LogicalORExprNoBF "?" _ AssignmentExpr ":" AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  AssignmentExpr  go to state 288
  ConditionalExpr  go to state 109

state 174

 218) ExprNoBF : ExprNoBF "," _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 289

state 175

 239) ExprStatement : ExprNoBF ";" _

  $default      reduce using rule 239 (ExprStatement)


state 176

 240) ExprStatement : ExprNoBF error _

  $default      reduce using rule 240 (ExprStatement)


state 177

 219) Block : "{" SourceElements _ "}"

  "}"           shift, and go to state 290


state 178

 220) VariableStatement : VAR VariableDeclarationList _ ";"
 221) VariableStatement : VAR VariableDeclarationList _ error
 223) VariableDeclarationList : VariableDeclarationList _ "," VariableDeclaration

  error         shift, and go to state 292
  ","           shift, and go to state 293
  ";"           shift, and go to state 291


state 179

 222) VariableDeclarationList : VariableDeclaration _

  $default      reduce using rule 222 (VariableDeclarationList)


state 180

 226) VariableDeclaration : IDENT _
 227) VariableDeclaration : IDENT _ Initializer

  "="           shift, and go to state 295
  $default      reduce using rule 226 (VariableDeclaration)

  Initializer   go to state 294

state 181

 230) ConstStatement : CONST ConstDeclarationList _ ";"
 231) ConstStatement : CONST ConstDeclarationList _ error
 233) ConstDeclarationList : ConstDeclarationList _ "," ConstDeclaration

  error         shift, and go to state 297
  ","           shift, and go to state 298
  ";"           shift, and go to state 296


state 182

 232) ConstDeclarationList : ConstDeclaration _

  $default      reduce using rule 232 (ConstDeclarationList)


state 183

 234) ConstDeclaration : IDENT _
 235) ConstDeclaration : IDENT _ Initializer

  "="           shift, and go to state 295
  $default      reduce using rule 234 (ConstDeclaration)

  Initializer   go to state 299

state 184

 241) IfStatement : IF "(" _ Expr ")" Statement
 242) IfStatement : IF "(" _ Expr ")" Statement ELSE Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 300

state 185

 243) IterationStatement : DO Statement _ WHILE "(" Expr ")" ";"
 244) IterationStatement : DO Statement _ WHILE "(" Expr ")" error

  WHILE         shift, and go to state 301


state 186

 245) IterationStatement : WHILE "(" _ Expr ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 302

state 187

 246) IterationStatement : FOR "(" _ ExprNoInOpt ";" ExprOpt ";" ExprOpt ")" Statement
 247) IterationStatement : FOR "(" _ VAR VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt ")" Statement
 248) IterationStatement : FOR "(" _ LeftHandSideExpr IN Expr ")" Statement
 249) IterationStatement : FOR "(" _ VAR IDENT IN Expr ")" Statement
 250) IterationStatement : FOR "(" _ VAR IDENT InitializerNoIn IN Expr ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 316
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  $default      reduce using rule 253 (ExprNoInOpt)

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 303
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 310
  LogicalORExprNoIn  go to state 311
  ConditionalExprNoIn  go to state 312
  AssignmentExprNoIn  go to state 313
  ExprNoIn      go to state 314
  ExprNoInOpt   go to state 315

state 188

 255) ContinueStatement : CONTINUE ";" _

  $default      reduce using rule 255 (ContinueStatement)


state 189

 256) ContinueStatement : CONTINUE error _

  $default      reduce using rule 256 (ContinueStatement)


state 190

 257) ContinueStatement : CONTINUE IDENT _ ";"
 258) ContinueStatement : CONTINUE IDENT _ error

  error         shift, and go to state 318
  ";"           shift, and go to state 317


state 191

 259) BreakStatement : BREAK ";" _

  $default      reduce using rule 259 (BreakStatement)


state 192

 260) BreakStatement : BREAK error _

  $default      reduce using rule 260 (BreakStatement)


state 193

 261) BreakStatement : BREAK IDENT _ ";"
 262) BreakStatement : BREAK IDENT _ error

  error         shift, and go to state 320
  ";"           shift, and go to state 319


state 194

 214) Expr : Expr _ "," AssignmentExpr
 265) ReturnStatement : RETURN Expr _ ";"
 266) ReturnStatement : RETURN Expr _ error

  error         shift, and go to state 322
  ","           shift, and go to state 213
  ";"           shift, and go to state 321


state 195

 263) ReturnStatement : RETURN ";" _

  $default      reduce using rule 263 (ReturnStatement)


state 196

 264) ReturnStatement : RETURN error _

  $default      reduce using rule 264 (ReturnStatement)


state 197

 267) WithStatement : WITH "(" _ Expr ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 323

state 198

 268) SwitchStatement : SWITCH "(" _ Expr ")" CaseBlock

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 324

state 199

 214) Expr : Expr _ "," AssignmentExpr
 278) ThrowStatement : THROW Expr _ ";"
 279) ThrowStatement : THROW Expr _ error

  error         shift, and go to state 326
  ","           shift, and go to state 213
  ";"           shift, and go to state 325


state 200

 280) TryStatement : TRY Block _ FINALLY Block
 281) TryStatement : TRY Block _ CATCH "(" IDENT ")" Block
 282) TryStatement : TRY Block _ CATCH "(" IDENT ")" Block FINALLY Block

  CATCH         shift, and go to state 328
  FINALLY       shift, and go to state 327


state 201

 283) DebuggerStatement : DEBUGGER ";" _

  $default      reduce using rule 283 (DebuggerStatement)


state 202

 284) DebuggerStatement : DEBUGGER error _

  $default      reduce using rule 284 (DebuggerStatement)


state 203

 285) FunctionDeclaration : FUNCTION IDENT _ "(" ")" "{" FunctionBody "}"
 286) FunctionDeclaration : FUNCTION IDENT _ "(" FormalParameterList ")" "{" FunctionBody "}"

  "("           shift, and go to state 329


state 204


  $default      accept


state 205

 277) LabelledStatement : IDENT ":" Statement _

  $default      reduce using rule 277 (LabelledStatement)


state 206

  29) Property : IDENT _ ":" AssignmentExpr
  32) Property : IDENT _ IDENT "(" ")" "{" FunctionBody "}"
  33) Property : IDENT _ IDENT "(" FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 331
  ":"           shift, and go to state 330


state 207

  30) Property : STRING _ ":" AssignmentExpr

  ":"           shift, and go to state 332


state 208

  31) Property : NUMBER _ ":" AssignmentExpr

  ":"           shift, and go to state 333


state 209

  34) PropertyList : Property _

  $default      reduce using rule 34 (PropertyList)


state 210

  35) PropertyList : PropertyList _ "," Property
  38) PrimaryExpr : "{" PropertyList _ "}"
  39) PrimaryExpr : "{" PropertyList _ "," "}"

  "}"           shift, and go to state 335
  ","           shift, and go to state 334


state 211

  37) PrimaryExpr : "{" "}" _

  $default      reduce using rule 37 (PrimaryExpr)


state 212

  44) PrimaryExprNoBrace : "(" Expr ")" _

  $default      reduce using rule 44 (PrimaryExprNoBrace)


state 213

 214) Expr : Expr "," _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 336

state 214

  56) MemberExpr : MemberExpr "[" _ Expr "]"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  Expr          go to state 337
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110

state 215

  57) MemberExpr : MemberExpr "." _ IDENT

  IDENT         shift, and go to state 338


state 216

  67) CallExpr : MemberExpr Arguments _

  $default      reduce using rule 67 (CallExpr)


state 217

  56) MemberExpr : MemberExpr _ "[" Expr "]"
  57) MemberExpr : MemberExpr _ "." IDENT
  58) MemberExpr : NEW MemberExpr _ Arguments
  63) NewExpr : MemberExpr _

  "("           shift, and go to state 119
  "["           shift, and go to state 214
  "."           shift, and go to state 215
  $default      reduce using rule 63 (NewExpr)

  Arguments     go to state 339

state 218

  64) NewExpr : NEW NewExpr _

  $default      reduce using rule 64 (NewExpr)


state 219

  68) CallExpr : CallExpr Arguments _

  $default      reduce using rule 68 (CallExpr)


state 220

  69) CallExpr : CallExpr "[" _ Expr "]"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  Expr          go to state 340
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110

state 221

  70) CallExpr : CallExpr "." _ IDENT

  IDENT         shift, and go to state 341


state 222

  84) PostfixExpr : LeftHandSideExpr PLUSPLUS _

  $default      reduce using rule 84 (PostfixExpr)


state 223

  85) PostfixExpr : LeftHandSideExpr MINUSMINUS _

  $default      reduce using rule 85 (PostfixExpr)


state 224

 196) AssignmentExpr : LeftHandSideExpr AssignmentOperator _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 342

state 225

 103) MultiplicativeExpr : MultiplicativeExpr "*" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 343

state 226

 104) MultiplicativeExpr : MultiplicativeExpr "/" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 344

state 227

 105) MultiplicativeExpr : MultiplicativeExpr "%" _ UnaryExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 345

state 228

 111) AdditiveExpr : AdditiveExpr "+" _ MultiplicativeExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 346

state 229

 112) AdditiveExpr : AdditiveExpr "-" _ MultiplicativeExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 347

state 230

 117) ShiftExpr : ShiftExpr LSHIFT _ AdditiveExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 348

state 231

 118) ShiftExpr : ShiftExpr RSHIFT _ AdditiveExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 349

state 232

 119) ShiftExpr : ShiftExpr URSHIFT _ AdditiveExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 350

state 233

 125) RelationalExpr : RelationalExpr "<" _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 351

state 234

 126) RelationalExpr : RelationalExpr ">" _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 352

state 235

 127) RelationalExpr : RelationalExpr LE _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 353

state 236

 128) RelationalExpr : RelationalExpr GE _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 354

state 237

 129) RelationalExpr : RelationalExpr INSTANCEOF _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 355

state 238

 130) RelationalExpr : RelationalExpr IN _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 356

state 239

 145) EqualityExpr : EqualityExpr EQEQ _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 357

state 240

 146) EqualityExpr : EqualityExpr NE _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 358

state 241

 147) EqualityExpr : EqualityExpr STREQ _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 359

state 242

 148) EqualityExpr : EqualityExpr STRNEQ _ RelationalExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 360

state 243

 160) BitwiseANDExpr : BitwiseANDExpr "&" _ EqualityExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 361

state 244

 166) BitwiseXORExpr : BitwiseXORExpr "^" _ BitwiseANDExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 362

state 245

 172) BitwiseORExpr : BitwiseORExpr "|" _ BitwiseXORExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 363

state 246

 178) LogicalANDExpr : LogicalANDExpr AND _ BitwiseORExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 364

state 247

 184) LogicalORExpr : LogicalORExpr OR _ LogicalANDExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 365

state 248

 190) ConditionalExpr : LogicalORExpr "?" _ AssignmentExpr ":" AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  AssignmentExpr  go to state 366
  ConditionalExpr  go to state 109

state 249

 287) FunctionExpr : FUNCTION "(" _ ")" "{" FunctionBody "}"
 288) FunctionExpr : FUNCTION "(" _ FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 369
  ")"           shift, and go to state 367

  FormalParameterList  go to state 368

state 250

 289) FunctionExpr : FUNCTION IDENT _ "(" ")" "{" FunctionBody "}"
 290) FunctionExpr : FUNCTION IDENT _ "(" FormalParameterList ")" "{" FunctionBody "}"

  "("           shift, and go to state 370


state 251

  45) ArrayLiteral : "[" ElisionOpt "]" _

  $default      reduce using rule 45 (ArrayLiteral)


state 252

  48) ElementList : ElisionOpt AssignmentExpr _

  $default      reduce using rule 48 (ElementList)


state 253

  46) ArrayLiteral : "[" ElementList "]" _

  $default      reduce using rule 46 (ArrayLiteral)


state 254

  47) ArrayLiteral : "[" ElementList "," _ ElisionOpt "]"
  49) ElementList : ElementList "," _ ElisionOpt AssignmentExpr

  ","           shift, and go to state 115
  $default      reduce using rule 50 (ElisionOpt)

  ElisionOpt    go to state 371
  Elision       go to state 114

state 255

  53) Elision : Elision "," _

  $default      reduce using rule 53 (Elision)


state 256

  60) MemberExprNoBF : MemberExprNoBF "[" Expr _ "]"
 214) Expr : Expr _ "," AssignmentExpr

  ","           shift, and go to state 213
  "]"           shift, and go to state 372


state 257

  61) MemberExprNoBF : MemberExprNoBF "." IDENT _

  $default      reduce using rule 61 (MemberExprNoBF)


state 258

  75) Arguments : "(" ")" _

  $default      reduce using rule 75 (Arguments)


state 259

  76) Arguments : "(" ArgumentList _ ")"
  78) ArgumentList : ArgumentList _ "," AssignmentExpr

  ")"           shift, and go to state 373
  ","           shift, and go to state 374


state 260

  77) ArgumentList : AssignmentExpr _

  $default      reduce using rule 77 (ArgumentList)


state 261

  62) MemberExprNoBF : NEW MemberExpr Arguments _

  $default      reduce using rule 62 (MemberExprNoBF)


state 262

  73) CallExprNoBF : CallExprNoBF "[" Expr _ "]"
 214) Expr : Expr _ "," AssignmentExpr

  ","           shift, and go to state 213
  "]"           shift, and go to state 375


state 263

  74) CallExprNoBF : CallExprNoBF "." IDENT _

  $default      reduce using rule 74 (CallExprNoBF)


state 264

 200) AssignmentExprNoBF : LeftHandSideExprNoBF AssignmentOperator AssignmentExpr _

  $default      reduce using rule 200 (AssignmentExprNoBF)


state 265

 107) MultiplicativeExprNoBF : MultiplicativeExprNoBF "*" UnaryExpr _

  $default      reduce using rule 107 (MultiplicativeExprNoBF)


state 266

 108) MultiplicativeExprNoBF : MultiplicativeExprNoBF "/" UnaryExpr _

  $default      reduce using rule 108 (MultiplicativeExprNoBF)


state 267

 109) MultiplicativeExprNoBF : MultiplicativeExprNoBF "%" UnaryExpr _

  $default      reduce using rule 109 (MultiplicativeExprNoBF)


state 268

 103) MultiplicativeExpr : MultiplicativeExpr _ "*" UnaryExpr
 104) MultiplicativeExpr : MultiplicativeExpr _ "/" UnaryExpr
 105) MultiplicativeExpr : MultiplicativeExpr _ "%" UnaryExpr
 114) AdditiveExprNoBF : AdditiveExprNoBF "+" MultiplicativeExpr _

  "*"           shift, and go to state 225
  "/"           shift, and go to state 226
  "%"           shift, and go to state 227
  $default      reduce using rule 114 (AdditiveExprNoBF)


state 269

 103) MultiplicativeExpr : MultiplicativeExpr _ "*" UnaryExpr
 104) MultiplicativeExpr : MultiplicativeExpr _ "/" UnaryExpr
 105) MultiplicativeExpr : MultiplicativeExpr _ "%" UnaryExpr
 115) AdditiveExprNoBF : AdditiveExprNoBF "-" MultiplicativeExpr _

  "*"           shift, and go to state 225
  "/"           shift, and go to state 226
  "%"           shift, and go to state 227
  $default      reduce using rule 115 (AdditiveExprNoBF)


state 270

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 121) ShiftExprNoBF : ShiftExprNoBF LSHIFT AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 121 (ShiftExprNoBF)


state 271

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 122) ShiftExprNoBF : ShiftExprNoBF RSHIFT AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 122 (ShiftExprNoBF)


state 272

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 123) ShiftExprNoBF : ShiftExprNoBF URSHIFT AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 123 (ShiftExprNoBF)


state 273

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 138) RelationalExprNoBF : RelationalExprNoBF "<" ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 138 (RelationalExprNoBF)


state 274

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 139) RelationalExprNoBF : RelationalExprNoBF ">" ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 139 (RelationalExprNoBF)


state 275

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 140) RelationalExprNoBF : RelationalExprNoBF LE ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 140 (RelationalExprNoBF)


state 276

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 141) RelationalExprNoBF : RelationalExprNoBF GE ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 141 (RelationalExprNoBF)


state 277

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 142) RelationalExprNoBF : RelationalExprNoBF INSTANCEOF ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 142 (RelationalExprNoBF)


state 278

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 143) RelationalExprNoBF : RelationalExprNoBF IN ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 143 (RelationalExprNoBF)


state 279

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 155) EqualityExprNoBF : EqualityExprNoBF EQEQ RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 155 (EqualityExprNoBF)


state 280

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 156) EqualityExprNoBF : EqualityExprNoBF NE RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 156 (EqualityExprNoBF)


state 281

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 157) EqualityExprNoBF : EqualityExprNoBF STREQ RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 157 (EqualityExprNoBF)


state 282

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 158) EqualityExprNoBF : EqualityExprNoBF STRNEQ RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 158 (EqualityExprNoBF)


state 283

 145) EqualityExpr : EqualityExpr _ EQEQ RelationalExpr
 146) EqualityExpr : EqualityExpr _ NE RelationalExpr
 147) EqualityExpr : EqualityExpr _ STREQ RelationalExpr
 148) EqualityExpr : EqualityExpr _ STRNEQ RelationalExpr
 164) BitwiseANDExprNoBF : BitwiseANDExprNoBF "&" EqualityExpr _

  EQEQ          shift, and go to state 239
  NE            shift, and go to state 240
  STREQ         shift, and go to state 241
  STRNEQ        shift, and go to state 242
  $default      reduce using rule 164 (BitwiseANDExprNoBF)


state 284

 160) BitwiseANDExpr : BitwiseANDExpr _ "&" EqualityExpr
 170) BitwiseXORExprNoBF : BitwiseXORExprNoBF "^" BitwiseANDExpr _

  "&"           shift, and go to state 243
  $default      reduce using rule 170 (BitwiseXORExprNoBF)


state 285

 166) BitwiseXORExpr : BitwiseXORExpr _ "^" BitwiseANDExpr
 176) BitwiseORExprNoBF : BitwiseORExprNoBF "|" BitwiseXORExpr _

  "^"           shift, and go to state 244
  $default      reduce using rule 176 (BitwiseORExprNoBF)


state 286

 172) BitwiseORExpr : BitwiseORExpr _ "|" BitwiseXORExpr
 182) LogicalANDExprNoBF : LogicalANDExprNoBF AND BitwiseORExpr _

  "|"           shift, and go to state 245
  $default      reduce using rule 182 (LogicalANDExprNoBF)


state 287

 178) LogicalANDExpr : LogicalANDExpr _ AND BitwiseORExpr
 188) LogicalORExprNoBF : LogicalORExprNoBF OR LogicalANDExpr _

  AND           shift, and go to state 246
  $default      reduce using rule 188 (LogicalORExprNoBF)


state 288

 194) ConditionalExprNoBF : LogicalORExprNoBF "?" AssignmentExpr _ ":" AssignmentExpr

  ":"           shift, and go to state 376


state 289

 218) ExprNoBF : ExprNoBF "," AssignmentExpr _

  $default      reduce using rule 218 (ExprNoBF)


state 290

 219) Block : "{" SourceElements "}" _

  $default      reduce using rule 219 (Block)


state 291

 220) VariableStatement : VAR VariableDeclarationList ";" _

  $default      reduce using rule 220 (VariableStatement)


state 292

 221) VariableStatement : VAR VariableDeclarationList error _

  $default      reduce using rule 221 (VariableStatement)


state 293

 223) VariableDeclarationList : VariableDeclarationList "," _ VariableDeclaration

  IDENT         shift, and go to state 180

  VariableDeclaration  go to state 377

state 294

 227) VariableDeclaration : IDENT Initializer _

  $default      reduce using rule 227 (VariableDeclaration)


state 295

 236) Initializer : "=" _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 378

state 296

 230) ConstStatement : CONST ConstDeclarationList ";" _

  $default      reduce using rule 230 (ConstStatement)


state 297

 231) ConstStatement : CONST ConstDeclarationList error _

  $default      reduce using rule 231 (ConstStatement)


state 298

 233) ConstDeclarationList : ConstDeclarationList "," _ ConstDeclaration

  IDENT         shift, and go to state 183

  ConstDeclaration  go to state 379

state 299

 235) ConstDeclaration : IDENT Initializer _

  $default      reduce using rule 235 (ConstDeclaration)


state 300

 214) Expr : Expr _ "," AssignmentExpr
 241) IfStatement : IF "(" Expr _ ")" Statement
 242) IfStatement : IF "(" Expr _ ")" Statement ELSE Statement

  ")"           shift, and go to state 380
  ","           shift, and go to state 213


state 301

 243) IterationStatement : DO Statement WHILE _ "(" Expr ")" ";"
 244) IterationStatement : DO Statement WHILE _ "(" Expr ")" error

  "("           shift, and go to state 381


state 302

 214) Expr : Expr _ "," AssignmentExpr
 245) IterationStatement : WHILE "(" Expr _ ")" Statement

  ")"           shift, and go to state 382
  ","           shift, and go to state 213


state 303

  83) PostfixExpr : LeftHandSideExpr _
  84) PostfixExpr : LeftHandSideExpr _ PLUSPLUS
  85) PostfixExpr : LeftHandSideExpr _ MINUSMINUS
 198) AssignmentExprNoIn : LeftHandSideExpr _ AssignmentOperator AssignmentExprNoIn
 248) IterationStatement : FOR "(" LeftHandSideExpr _ IN Expr ")" Statement

  IN            shift, and go to state 384
  PLUSPLUS      shift, and go to state 222
  MINUSMINUS    shift, and go to state 223
  PLUSEQUAL     shift, and go to state 129
  MINUSEQUAL    shift, and go to state 130
  MULTEQUAL     shift, and go to state 131
  DIVEQUAL      shift, and go to state 132
  LSHIFTEQUAL   shift, and go to state 133
  RSHIFTEQUAL   shift, and go to state 134
  URSHIFTEQUAL  shift, and go to state 135
  ANDEQUAL      shift, and go to state 136
  MODEQUAL      shift, and go to state 139
  XOREQUAL      shift, and go to state 137
  OREQUAL       shift, and go to state 138
  "="           shift, and go to state 128
  $default      reduce using rule 83 (PostfixExpr)

  AssignmentOperator  go to state 383

state 304

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 131) RelationalExprNoIn : ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 131 (RelationalExprNoIn)


state 305

 132) RelationalExprNoIn : RelationalExprNoIn _ "<" ShiftExpr
 133) RelationalExprNoIn : RelationalExprNoIn _ ">" ShiftExpr
 134) RelationalExprNoIn : RelationalExprNoIn _ LE ShiftExpr
 135) RelationalExprNoIn : RelationalExprNoIn _ GE ShiftExpr
 136) RelationalExprNoIn : RelationalExprNoIn _ INSTANCEOF ShiftExpr
 149) EqualityExprNoIn : RelationalExprNoIn _

  INSTANCEOF    shift, and go to state 389
  LE            shift, and go to state 387
  GE            shift, and go to state 388
  "<"           shift, and go to state 385
  ">"           shift, and go to state 386
  $default      reduce using rule 149 (EqualityExprNoIn)


state 306

 150) EqualityExprNoIn : EqualityExprNoIn _ EQEQ RelationalExprNoIn
 151) EqualityExprNoIn : EqualityExprNoIn _ NE RelationalExprNoIn
 152) EqualityExprNoIn : EqualityExprNoIn _ STREQ RelationalExprNoIn
 153) EqualityExprNoIn : EqualityExprNoIn _ STRNEQ RelationalExprNoIn
 161) BitwiseANDExprNoIn : EqualityExprNoIn _

  EQEQ          shift, and go to state 390
  NE            shift, and go to state 391
  STREQ         shift, and go to state 392
  STRNEQ        shift, and go to state 393
  $default      reduce using rule 161 (BitwiseANDExprNoIn)


state 307

 162) BitwiseANDExprNoIn : BitwiseANDExprNoIn _ "&" EqualityExprNoIn
 167) BitwiseXORExprNoIn : BitwiseANDExprNoIn _

  "&"           shift, and go to state 394
  $default      reduce using rule 167 (BitwiseXORExprNoIn)


state 308

 168) BitwiseXORExprNoIn : BitwiseXORExprNoIn _ "^" BitwiseANDExprNoIn
 173) BitwiseORExprNoIn : BitwiseXORExprNoIn _

  "^"           shift, and go to state 395
  $default      reduce using rule 173 (BitwiseORExprNoIn)


state 309

 174) BitwiseORExprNoIn : BitwiseORExprNoIn _ "|" BitwiseXORExprNoIn
 179) LogicalANDExprNoIn : BitwiseORExprNoIn _

  "|"           shift, and go to state 396
  $default      reduce using rule 179 (LogicalANDExprNoIn)


state 310

 180) LogicalANDExprNoIn : LogicalANDExprNoIn _ AND BitwiseORExprNoIn
 185) LogicalORExprNoIn : LogicalANDExprNoIn _

  AND           shift, and go to state 397
  $default      reduce using rule 185 (LogicalORExprNoIn)


state 311

 186) LogicalORExprNoIn : LogicalORExprNoIn _ OR LogicalANDExprNoIn
 191) ConditionalExprNoIn : LogicalORExprNoIn _
 192) ConditionalExprNoIn : LogicalORExprNoIn _ "?" AssignmentExprNoIn ":" AssignmentExprNoIn

  OR            shift, and go to state 398
  "?"           shift, and go to state 399
  $default      reduce using rule 191 (ConditionalExprNoIn)


state 312

 197) AssignmentExprNoIn : ConditionalExprNoIn _

  $default      reduce using rule 197 (AssignmentExprNoIn)


state 313

 215) ExprNoIn : AssignmentExprNoIn _

  $default      reduce using rule 215 (ExprNoIn)


state 314

 216) ExprNoIn : ExprNoIn _ "," AssignmentExprNoIn
 254) ExprNoInOpt : ExprNoIn _

  ","           shift, and go to state 400
  $default      reduce using rule 254 (ExprNoInOpt)


state 315

 246) IterationStatement : FOR "(" ExprNoInOpt _ ";" ExprOpt ";" ExprOpt ")" Statement

  ";"           shift, and go to state 401


state 316

 247) IterationStatement : FOR "(" VAR _ VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt ")" Statement
 249) IterationStatement : FOR "(" VAR _ IDENT IN Expr ")" Statement
 250) IterationStatement : FOR "(" VAR _ IDENT InitializerNoIn IN Expr ")" Statement

  IDENT         shift, and go to state 404

  VariableDeclarationNoIn  go to state 402
  VariableDeclarationListNoIn  go to state 403

state 317

 257) ContinueStatement : CONTINUE IDENT ";" _

  $default      reduce using rule 257 (ContinueStatement)


state 318

 258) ContinueStatement : CONTINUE IDENT error _

  $default      reduce using rule 258 (ContinueStatement)


state 319

 261) BreakStatement : BREAK IDENT ";" _

  $default      reduce using rule 261 (BreakStatement)


state 320

 262) BreakStatement : BREAK IDENT error _

  $default      reduce using rule 262 (BreakStatement)


state 321

 265) ReturnStatement : RETURN Expr ";" _

  $default      reduce using rule 265 (ReturnStatement)


state 322

 266) ReturnStatement : RETURN Expr error _

  $default      reduce using rule 266 (ReturnStatement)


state 323

 214) Expr : Expr _ "," AssignmentExpr
 267) WithStatement : WITH "(" Expr _ ")" Statement

  ")"           shift, and go to state 405
  ","           shift, and go to state 213


state 324

 214) Expr : Expr _ "," AssignmentExpr
 268) SwitchStatement : SWITCH "(" Expr _ ")" CaseBlock

  ")"           shift, and go to state 406
  ","           shift, and go to state 213


state 325

 278) ThrowStatement : THROW Expr ";" _

  $default      reduce using rule 278 (ThrowStatement)


state 326

 279) ThrowStatement : THROW Expr error _

  $default      reduce using rule 279 (ThrowStatement)


state 327

 280) TryStatement : TRY Block FINALLY _ Block

  "{"           shift, and go to state 65

  Block         go to state 407

state 328

 281) TryStatement : TRY Block CATCH _ "(" IDENT ")" Block
 282) TryStatement : TRY Block CATCH _ "(" IDENT ")" Block FINALLY Block

  "("           shift, and go to state 408


state 329

 285) FunctionDeclaration : FUNCTION IDENT "(" _ ")" "{" FunctionBody "}"
 286) FunctionDeclaration : FUNCTION IDENT "(" _ FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 369
  ")"           shift, and go to state 409

  FormalParameterList  go to state 410

state 330

  29) Property : IDENT ":" _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  AssignmentExpr  go to state 411
  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 331

  32) Property : IDENT IDENT _ "(" ")" "{" FunctionBody "}"
  33) Property : IDENT IDENT _ "(" FormalParameterList ")" "{" FunctionBody "}"

  "("           shift, and go to state 412


state 332

  30) Property : STRING ":" _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  AssignmentExpr  go to state 413
  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 333

  31) Property : NUMBER ":" _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  AssignmentExpr  go to state 414
  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 334

  35) PropertyList : PropertyList "," _ Property
  39) PrimaryExpr : "{" PropertyList "," _ "}"

  NUMBER        shift, and go to state 208
  STRING        shift, and go to state 207
  IDENT         shift, and go to state 206
  "}"           shift, and go to state 416

  Property      go to state 415

state 335

  38) PrimaryExpr : "{" PropertyList "}" _

  $default      reduce using rule 38 (PrimaryExpr)


state 336

 214) Expr : Expr "," AssignmentExpr _

  $default      reduce using rule 214 (Expr)


state 337

  56) MemberExpr : MemberExpr "[" Expr _ "]"
 214) Expr : Expr _ "," AssignmentExpr

  ","           shift, and go to state 213
  "]"           shift, and go to state 417


state 338

  57) MemberExpr : MemberExpr "." IDENT _

  $default      reduce using rule 57 (MemberExpr)


state 339

  58) MemberExpr : NEW MemberExpr Arguments _

  $default      reduce using rule 58 (MemberExpr)


state 340

  69) CallExpr : CallExpr "[" Expr _ "]"
 214) Expr : Expr _ "," AssignmentExpr

  ","           shift, and go to state 213
  "]"           shift, and go to state 418


state 341

  70) CallExpr : CallExpr "." IDENT _

  $default      reduce using rule 70 (CallExpr)


state 342

 196) AssignmentExpr : LeftHandSideExpr AssignmentOperator AssignmentExpr _

  $default      reduce using rule 196 (AssignmentExpr)


state 343

 103) MultiplicativeExpr : MultiplicativeExpr "*" UnaryExpr _

  $default      reduce using rule 103 (MultiplicativeExpr)


state 344

 104) MultiplicativeExpr : MultiplicativeExpr "/" UnaryExpr _

  $default      reduce using rule 104 (MultiplicativeExpr)


state 345

 105) MultiplicativeExpr : MultiplicativeExpr "%" UnaryExpr _

  $default      reduce using rule 105 (MultiplicativeExpr)


state 346

 103) MultiplicativeExpr : MultiplicativeExpr _ "*" UnaryExpr
 104) MultiplicativeExpr : MultiplicativeExpr _ "/" UnaryExpr
 105) MultiplicativeExpr : MultiplicativeExpr _ "%" UnaryExpr
 111) AdditiveExpr : AdditiveExpr "+" MultiplicativeExpr _

  "*"           shift, and go to state 225
  "/"           shift, and go to state 226
  "%"           shift, and go to state 227
  $default      reduce using rule 111 (AdditiveExpr)


state 347

 103) MultiplicativeExpr : MultiplicativeExpr _ "*" UnaryExpr
 104) MultiplicativeExpr : MultiplicativeExpr _ "/" UnaryExpr
 105) MultiplicativeExpr : MultiplicativeExpr _ "%" UnaryExpr
 112) AdditiveExpr : AdditiveExpr "-" MultiplicativeExpr _

  "*"           shift, and go to state 225
  "/"           shift, and go to state 226
  "%"           shift, and go to state 227
  $default      reduce using rule 112 (AdditiveExpr)


state 348

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 117) ShiftExpr : ShiftExpr LSHIFT AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 117 (ShiftExpr)


state 349

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 118) ShiftExpr : ShiftExpr RSHIFT AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 118 (ShiftExpr)


state 350

 111) AdditiveExpr : AdditiveExpr _ "+" MultiplicativeExpr
 112) AdditiveExpr : AdditiveExpr _ "-" MultiplicativeExpr
 119) ShiftExpr : ShiftExpr URSHIFT AdditiveExpr _

  "+"           shift, and go to state 228
  "-"           shift, and go to state 229
  $default      reduce using rule 119 (ShiftExpr)


state 351

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 125) RelationalExpr : RelationalExpr "<" ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 125 (RelationalExpr)


state 352

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 126) RelationalExpr : RelationalExpr ">" ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 126 (RelationalExpr)


state 353

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 127) RelationalExpr : RelationalExpr LE ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 127 (RelationalExpr)


state 354

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 128) RelationalExpr : RelationalExpr GE ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 128 (RelationalExpr)


state 355

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 129) RelationalExpr : RelationalExpr INSTANCEOF ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 129 (RelationalExpr)


state 356

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 130) RelationalExpr : RelationalExpr IN ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 130 (RelationalExpr)


state 357

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 145) EqualityExpr : EqualityExpr EQEQ RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 145 (EqualityExpr)


state 358

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 146) EqualityExpr : EqualityExpr NE RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 146 (EqualityExpr)


state 359

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 147) EqualityExpr : EqualityExpr STREQ RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 147 (EqualityExpr)


state 360

 125) RelationalExpr : RelationalExpr _ "<" ShiftExpr
 126) RelationalExpr : RelationalExpr _ ">" ShiftExpr
 127) RelationalExpr : RelationalExpr _ LE ShiftExpr
 128) RelationalExpr : RelationalExpr _ GE ShiftExpr
 129) RelationalExpr : RelationalExpr _ INSTANCEOF ShiftExpr
 130) RelationalExpr : RelationalExpr _ IN ShiftExpr
 148) EqualityExpr : EqualityExpr STRNEQ RelationalExpr _

  IN            shift, and go to state 238
  INSTANCEOF    shift, and go to state 237
  LE            shift, and go to state 235
  GE            shift, and go to state 236
  "<"           shift, and go to state 233
  ">"           shift, and go to state 234
  $default      reduce using rule 148 (EqualityExpr)


state 361

 145) EqualityExpr : EqualityExpr _ EQEQ RelationalExpr
 146) EqualityExpr : EqualityExpr _ NE RelationalExpr
 147) EqualityExpr : EqualityExpr _ STREQ RelationalExpr
 148) EqualityExpr : EqualityExpr _ STRNEQ RelationalExpr
 160) BitwiseANDExpr : BitwiseANDExpr "&" EqualityExpr _

  EQEQ          shift, and go to state 239
  NE            shift, and go to state 240
  STREQ         shift, and go to state 241
  STRNEQ        shift, and go to state 242
  $default      reduce using rule 160 (BitwiseANDExpr)


state 362

 160) BitwiseANDExpr : BitwiseANDExpr _ "&" EqualityExpr
 166) BitwiseXORExpr : BitwiseXORExpr "^" BitwiseANDExpr _

  "&"           shift, and go to state 243
  $default      reduce using rule 166 (BitwiseXORExpr)


state 363

 166) BitwiseXORExpr : BitwiseXORExpr _ "^" BitwiseANDExpr
 172) BitwiseORExpr : BitwiseORExpr "|" BitwiseXORExpr _

  "^"           shift, and go to state 244
  $default      reduce using rule 172 (BitwiseORExpr)


state 364

 172) BitwiseORExpr : BitwiseORExpr _ "|" BitwiseXORExpr
 178) LogicalANDExpr : LogicalANDExpr AND BitwiseORExpr _

  "|"           shift, and go to state 245
  $default      reduce using rule 178 (LogicalANDExpr)


state 365

 178) LogicalANDExpr : LogicalANDExpr _ AND BitwiseORExpr
 184) LogicalORExpr : LogicalORExpr OR LogicalANDExpr _

  AND           shift, and go to state 246
  $default      reduce using rule 184 (LogicalORExpr)


state 366

 190) ConditionalExpr : LogicalORExpr "?" AssignmentExpr _ ":" AssignmentExpr

  ":"           shift, and go to state 419


state 367

 287) FunctionExpr : FUNCTION "(" ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 420


state 368

 288) FunctionExpr : FUNCTION "(" FormalParameterList _ ")" "{" FunctionBody "}"
 292) FormalParameterList : FormalParameterList _ "," IDENT

  ")"           shift, and go to state 421
  ","           shift, and go to state 422


state 369

 291) FormalParameterList : IDENT _

  $default      reduce using rule 291 (FormalParameterList)


state 370

 289) FunctionExpr : FUNCTION IDENT "(" _ ")" "{" FunctionBody "}"
 290) FunctionExpr : FUNCTION IDENT "(" _ FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 369
  ")"           shift, and go to state 423

  FormalParameterList  go to state 424

state 371

  47) ArrayLiteral : "[" ElementList "," ElisionOpt _ "]"
  49) ElementList : ElementList "," ElisionOpt _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "]"           shift, and go to state 425
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  AssignmentExpr  go to state 426
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 372

  60) MemberExprNoBF : MemberExprNoBF "[" Expr "]" _

  $default      reduce using rule 60 (MemberExprNoBF)


state 373

  76) Arguments : "(" ArgumentList ")" _

  $default      reduce using rule 76 (Arguments)


state 374

  78) ArgumentList : ArgumentList "," _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  AssignmentExpr  go to state 427
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109

state 375

  73) CallExprNoBF : CallExprNoBF "[" Expr "]" _

  $default      reduce using rule 73 (CallExprNoBF)


state 376

 194) ConditionalExprNoBF : LogicalORExprNoBF "?" AssignmentExpr ":" _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  AssignmentExpr  go to state 428
  ConditionalExpr  go to state 109

state 377

 223) VariableDeclarationList : VariableDeclarationList "," VariableDeclaration _

  $default      reduce using rule 223 (VariableDeclarationList)


state 378

 236) Initializer : "=" AssignmentExpr _

  $default      reduce using rule 236 (Initializer)


state 379

 233) ConstDeclarationList : ConstDeclarationList "," ConstDeclaration _

  $default      reduce using rule 233 (ConstDeclarationList)


state 380

 241) IfStatement : IF "(" Expr ")" _ Statement
 242) IfStatement : IF "(" Expr ")" _ Statement ELSE Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 429

state 381

 243) IterationStatement : DO Statement WHILE "(" _ Expr ")" ";"
 244) IterationStatement : DO Statement WHILE "(" _ Expr ")" error

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 430

state 382

 245) IterationStatement : WHILE "(" Expr ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 431

state 383

 198) AssignmentExprNoIn : LeftHandSideExpr AssignmentOperator _ AssignmentExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 432
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 310
  LogicalORExprNoIn  go to state 311
  ConditionalExprNoIn  go to state 312
  AssignmentExprNoIn  go to state 433

state 384

 248) IterationStatement : FOR "(" LeftHandSideExpr IN _ Expr ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 434

state 385

 132) RelationalExprNoIn : RelationalExprNoIn "<" _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 435

state 386

 133) RelationalExprNoIn : RelationalExprNoIn ">" _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 436

state 387

 134) RelationalExprNoIn : RelationalExprNoIn LE _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 437

state 388

 135) RelationalExprNoIn : RelationalExprNoIn GE _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 438

state 389

 136) RelationalExprNoIn : RelationalExprNoIn INSTANCEOF _ ShiftExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 439

state 390

 150) EqualityExprNoIn : EqualityExprNoIn EQEQ _ RelationalExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 440

state 391

 151) EqualityExprNoIn : EqualityExprNoIn NE _ RelationalExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 441

state 392

 152) EqualityExprNoIn : EqualityExprNoIn STREQ _ RelationalExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 442

state 393

 153) EqualityExprNoIn : EqualityExprNoIn STRNEQ _ RelationalExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 443

state 394

 162) BitwiseANDExprNoIn : BitwiseANDExprNoIn "&" _ EqualityExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 444

state 395

 168) BitwiseXORExprNoIn : BitwiseXORExprNoIn "^" _ BitwiseANDExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 445

state 396

 174) BitwiseORExprNoIn : BitwiseORExprNoIn "|" _ BitwiseXORExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 446

state 397

 180) LogicalANDExprNoIn : LogicalANDExprNoIn AND _ BitwiseORExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 447

state 398

 186) LogicalORExprNoIn : LogicalORExprNoIn OR _ LogicalANDExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 140
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 448

state 399

 192) ConditionalExprNoIn : LogicalORExprNoIn "?" _ AssignmentExprNoIn ":" AssignmentExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 432
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 310
  LogicalORExprNoIn  go to state 311
  AssignmentExprNoIn  go to state 449
  ConditionalExprNoIn  go to state 312

state 400

 216) ExprNoIn : ExprNoIn "," _ AssignmentExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 432
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 310
  LogicalORExprNoIn  go to state 311
  ConditionalExprNoIn  go to state 312
  AssignmentExprNoIn  go to state 450

state 401

 246) IterationStatement : FOR "(" ExprNoInOpt ";" _ ExprOpt ";" ExprOpt ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  $default      reduce using rule 251 (ExprOpt)

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 451
  ExprOpt       go to state 452

state 402

 224) VariableDeclarationListNoIn : VariableDeclarationNoIn _

  $default      reduce using rule 224 (VariableDeclarationListNoIn)


state 403

 225) VariableDeclarationListNoIn : VariableDeclarationListNoIn _ "," VariableDeclarationNoIn
 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn _ ";" ExprOpt ";" ExprOpt ")" Statement

  ","           shift, and go to state 453
  ";"           shift, and go to state 454


state 404

 228) VariableDeclarationNoIn : IDENT _
 229) VariableDeclarationNoIn : IDENT _ InitializerNoIn
 249) IterationStatement : FOR "(" VAR IDENT _ IN Expr ")" Statement
 250) IterationStatement : FOR "(" VAR IDENT _ InitializerNoIn IN Expr ")" Statement

  IN            shift, and go to state 457
  "="           shift, and go to state 456
  $default      reduce using rule 228 (VariableDeclarationNoIn)

  InitializerNoIn  go to state 455

state 405

 267) WithStatement : WITH "(" Expr ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 458

state 406

 268) SwitchStatement : SWITCH "(" Expr ")" _ CaseBlock

  "{"           shift, and go to state 460

  CaseBlock     go to state 459

state 407

 280) TryStatement : TRY Block FINALLY Block _

  $default      reduce using rule 280 (TryStatement)


state 408

 281) TryStatement : TRY Block CATCH "(" _ IDENT ")" Block
 282) TryStatement : TRY Block CATCH "(" _ IDENT ")" Block FINALLY Block

  IDENT         shift, and go to state 461


state 409

 285) FunctionDeclaration : FUNCTION IDENT "(" ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 462


state 410

 286) FunctionDeclaration : FUNCTION IDENT "(" FormalParameterList _ ")" "{" FunctionBody "}"
 292) FormalParameterList : FormalParameterList _ "," IDENT

  ")"           shift, and go to state 463
  ","           shift, and go to state 422


state 411

  29) Property : IDENT ":" AssignmentExpr _

  $default      reduce using rule 29 (Property)


state 412

  32) Property : IDENT IDENT "(" _ ")" "{" FunctionBody "}"
  33) Property : IDENT IDENT "(" _ FormalParameterList ")" "{" FunctionBody "}"

  IDENT         shift, and go to state 369
  ")"           shift, and go to state 464

  FormalParameterList  go to state 465

state 413

  30) Property : STRING ":" AssignmentExpr _

  $default      reduce using rule 30 (Property)


state 414

  31) Property : NUMBER ":" AssignmentExpr _

  $default      reduce using rule 31 (Property)


state 415

  35) PropertyList : PropertyList "," Property _

  $default      reduce using rule 35 (PropertyList)


state 416

  39) PrimaryExpr : "{" PropertyList "," "}" _

  $default      reduce using rule 39 (PrimaryExpr)


state 417

  56) MemberExpr : MemberExpr "[" Expr "]" _

  $default      reduce using rule 56 (MemberExpr)


state 418

  69) CallExpr : CallExpr "[" Expr "]" _

  $default      reduce using rule 69 (CallExpr)


state 419

 190) ConditionalExpr : LogicalORExpr "?" AssignmentExpr ":" _ AssignmentExpr

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  AssignmentExpr  go to state 466
  ConditionalExpr  go to state 109

state 420

 287) FunctionExpr : FUNCTION "(" ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  FunctionBody  go to state 467
  SourceElements  go to state 468

state 421

 288) FunctionExpr : FUNCTION "(" FormalParameterList ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 469


state 422

 292) FormalParameterList : FormalParameterList "," _ IDENT

  IDENT         shift, and go to state 470


state 423

 289) FunctionExpr : FUNCTION IDENT "(" ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 471


state 424

 290) FunctionExpr : FUNCTION IDENT "(" FormalParameterList _ ")" "{" FunctionBody "}"
 292) FormalParameterList : FormalParameterList _ "," IDENT

  ")"           shift, and go to state 472
  ","           shift, and go to state 422


state 425

  47) ArrayLiteral : "[" ElementList "," ElisionOpt "]" _

  $default      reduce using rule 47 (ArrayLiteral)


state 426

  49) ElementList : ElementList "," ElisionOpt AssignmentExpr _

  $default      reduce using rule 49 (ElementList)


state 427

  78) ArgumentList : ArgumentList "," AssignmentExpr _

  $default      reduce using rule 78 (ArgumentList)


state 428

 194) ConditionalExprNoBF : LogicalORExprNoBF "?" AssignmentExpr ":" AssignmentExpr _

  $default      reduce using rule 194 (ConditionalExprNoBF)


state 429

 241) IfStatement : IF "(" Expr ")" Statement _
 242) IfStatement : IF "(" Expr ")" Statement _ ELSE Statement

  ELSE          shift, and go to state 473
  $default      reduce using rule 241 (IfStatement)


state 430

 214) Expr : Expr _ "," AssignmentExpr
 243) IterationStatement : DO Statement WHILE "(" Expr _ ")" ";"
 244) IterationStatement : DO Statement WHILE "(" Expr _ ")" error

  ")"           shift, and go to state 474
  ","           shift, and go to state 213


state 431

 245) IterationStatement : WHILE "(" Expr ")" Statement _

  $default      reduce using rule 245 (IterationStatement)


state 432

  83) PostfixExpr : LeftHandSideExpr _
  84) PostfixExpr : LeftHandSideExpr _ PLUSPLUS
  85) PostfixExpr : LeftHandSideExpr _ MINUSMINUS
 198) AssignmentExprNoIn : LeftHandSideExpr _ AssignmentOperator AssignmentExprNoIn

  PLUSPLUS      shift, and go to state 222
  MINUSMINUS    shift, and go to state 223
  PLUSEQUAL     shift, and go to state 129
  MINUSEQUAL    shift, and go to state 130
  MULTEQUAL     shift, and go to state 131
  DIVEQUAL      shift, and go to state 132
  LSHIFTEQUAL   shift, and go to state 133
  RSHIFTEQUAL   shift, and go to state 134
  URSHIFTEQUAL  shift, and go to state 135
  ANDEQUAL      shift, and go to state 136
  MODEQUAL      shift, and go to state 139
  XOREQUAL      shift, and go to state 137
  OREQUAL       shift, and go to state 138
  "="           shift, and go to state 128
  $default      reduce using rule 83 (PostfixExpr)

  AssignmentOperator  go to state 383

state 433

 198) AssignmentExprNoIn : LeftHandSideExpr AssignmentOperator AssignmentExprNoIn _

  $default      reduce using rule 198 (AssignmentExprNoIn)


state 434

 214) Expr : Expr _ "," AssignmentExpr
 248) IterationStatement : FOR "(" LeftHandSideExpr IN Expr _ ")" Statement

  ")"           shift, and go to state 475
  ","           shift, and go to state 213


state 435

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 132) RelationalExprNoIn : RelationalExprNoIn "<" ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 132 (RelationalExprNoIn)


state 436

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 133) RelationalExprNoIn : RelationalExprNoIn ">" ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 133 (RelationalExprNoIn)


state 437

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 134) RelationalExprNoIn : RelationalExprNoIn LE ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 134 (RelationalExprNoIn)


state 438

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 135) RelationalExprNoIn : RelationalExprNoIn GE ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 135 (RelationalExprNoIn)


state 439

 117) ShiftExpr : ShiftExpr _ LSHIFT AdditiveExpr
 118) ShiftExpr : ShiftExpr _ RSHIFT AdditiveExpr
 119) ShiftExpr : ShiftExpr _ URSHIFT AdditiveExpr
 136) RelationalExprNoIn : RelationalExprNoIn INSTANCEOF ShiftExpr _

  LSHIFT        shift, and go to state 230
  RSHIFT        shift, and go to state 231
  URSHIFT       shift, and go to state 232
  $default      reduce using rule 136 (RelationalExprNoIn)


state 440

 132) RelationalExprNoIn : RelationalExprNoIn _ "<" ShiftExpr
 133) RelationalExprNoIn : RelationalExprNoIn _ ">" ShiftExpr
 134) RelationalExprNoIn : RelationalExprNoIn _ LE ShiftExpr
 135) RelationalExprNoIn : RelationalExprNoIn _ GE ShiftExpr
 136) RelationalExprNoIn : RelationalExprNoIn _ INSTANCEOF ShiftExpr
 150) EqualityExprNoIn : EqualityExprNoIn EQEQ RelationalExprNoIn _

  INSTANCEOF    shift, and go to state 389
  LE            shift, and go to state 387
  GE            shift, and go to state 388
  "<"           shift, and go to state 385
  ">"           shift, and go to state 386
  $default      reduce using rule 150 (EqualityExprNoIn)


state 441

 132) RelationalExprNoIn : RelationalExprNoIn _ "<" ShiftExpr
 133) RelationalExprNoIn : RelationalExprNoIn _ ">" ShiftExpr
 134) RelationalExprNoIn : RelationalExprNoIn _ LE ShiftExpr
 135) RelationalExprNoIn : RelationalExprNoIn _ GE ShiftExpr
 136) RelationalExprNoIn : RelationalExprNoIn _ INSTANCEOF ShiftExpr
 151) EqualityExprNoIn : EqualityExprNoIn NE RelationalExprNoIn _

  INSTANCEOF    shift, and go to state 389
  LE            shift, and go to state 387
  GE            shift, and go to state 388
  "<"           shift, and go to state 385
  ">"           shift, and go to state 386
  $default      reduce using rule 151 (EqualityExprNoIn)


state 442

 132) RelationalExprNoIn : RelationalExprNoIn _ "<" ShiftExpr
 133) RelationalExprNoIn : RelationalExprNoIn _ ">" ShiftExpr
 134) RelationalExprNoIn : RelationalExprNoIn _ LE ShiftExpr
 135) RelationalExprNoIn : RelationalExprNoIn _ GE ShiftExpr
 136) RelationalExprNoIn : RelationalExprNoIn _ INSTANCEOF ShiftExpr
 152) EqualityExprNoIn : EqualityExprNoIn STREQ RelationalExprNoIn _

  INSTANCEOF    shift, and go to state 389
  LE            shift, and go to state 387
  GE            shift, and go to state 388
  "<"           shift, and go to state 385
  ">"           shift, and go to state 386
  $default      reduce using rule 152 (EqualityExprNoIn)


state 443

 132) RelationalExprNoIn : RelationalExprNoIn _ "<" ShiftExpr
 133) RelationalExprNoIn : RelationalExprNoIn _ ">" ShiftExpr
 134) RelationalExprNoIn : RelationalExprNoIn _ LE ShiftExpr
 135) RelationalExprNoIn : RelationalExprNoIn _ GE ShiftExpr
 136) RelationalExprNoIn : RelationalExprNoIn _ INSTANCEOF ShiftExpr
 153) EqualityExprNoIn : EqualityExprNoIn STRNEQ RelationalExprNoIn _

  INSTANCEOF    shift, and go to state 389
  LE            shift, and go to state 387
  GE            shift, and go to state 388
  "<"           shift, and go to state 385
  ">"           shift, and go to state 386
  $default      reduce using rule 153 (EqualityExprNoIn)


state 444

 150) EqualityExprNoIn : EqualityExprNoIn _ EQEQ RelationalExprNoIn
 151) EqualityExprNoIn : EqualityExprNoIn _ NE RelationalExprNoIn
 152) EqualityExprNoIn : EqualityExprNoIn _ STREQ RelationalExprNoIn
 153) EqualityExprNoIn : EqualityExprNoIn _ STRNEQ RelationalExprNoIn
 162) BitwiseANDExprNoIn : BitwiseANDExprNoIn "&" EqualityExprNoIn _

  EQEQ          shift, and go to state 390
  NE            shift, and go to state 391
  STREQ         shift, and go to state 392
  STRNEQ        shift, and go to state 393
  $default      reduce using rule 162 (BitwiseANDExprNoIn)


state 445

 162) BitwiseANDExprNoIn : BitwiseANDExprNoIn _ "&" EqualityExprNoIn
 168) BitwiseXORExprNoIn : BitwiseXORExprNoIn "^" BitwiseANDExprNoIn _

  "&"           shift, and go to state 394
  $default      reduce using rule 168 (BitwiseXORExprNoIn)


state 446

 168) BitwiseXORExprNoIn : BitwiseXORExprNoIn _ "^" BitwiseANDExprNoIn
 174) BitwiseORExprNoIn : BitwiseORExprNoIn "|" BitwiseXORExprNoIn _

  "^"           shift, and go to state 395
  $default      reduce using rule 174 (BitwiseORExprNoIn)


state 447

 174) BitwiseORExprNoIn : BitwiseORExprNoIn _ "|" BitwiseXORExprNoIn
 180) LogicalANDExprNoIn : LogicalANDExprNoIn AND BitwiseORExprNoIn _

  "|"           shift, and go to state 396
  $default      reduce using rule 180 (LogicalANDExprNoIn)


state 448

 180) LogicalANDExprNoIn : LogicalANDExprNoIn _ AND BitwiseORExprNoIn
 186) LogicalORExprNoIn : LogicalORExprNoIn OR LogicalANDExprNoIn _

  AND           shift, and go to state 397
  $default      reduce using rule 186 (LogicalORExprNoIn)


state 449

 192) ConditionalExprNoIn : LogicalORExprNoIn "?" AssignmentExprNoIn _ ":" AssignmentExprNoIn

  ":"           shift, and go to state 476


state 450

 216) ExprNoIn : ExprNoIn "," AssignmentExprNoIn _

  $default      reduce using rule 216 (ExprNoIn)


state 451

 214) Expr : Expr _ "," AssignmentExpr
 252) ExprOpt : Expr _

  ","           shift, and go to state 213
  $default      reduce using rule 252 (ExprOpt)


state 452

 246) IterationStatement : FOR "(" ExprNoInOpt ";" ExprOpt _ ";" ExprOpt ")" Statement

  ";"           shift, and go to state 477


state 453

 225) VariableDeclarationListNoIn : VariableDeclarationListNoIn "," _ VariableDeclarationNoIn

  IDENT         shift, and go to state 479

  VariableDeclarationNoIn  go to state 478

state 454

 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn ";" _ ExprOpt ";" ExprOpt ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  $default      reduce using rule 251 (ExprOpt)

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 451
  ExprOpt       go to state 480

state 455

 229) VariableDeclarationNoIn : IDENT InitializerNoIn _
 250) IterationStatement : FOR "(" VAR IDENT InitializerNoIn _ IN Expr ")" Statement

  IN            shift, and go to state 481
  $default      reduce using rule 229 (VariableDeclarationNoIn)


state 456

 237) InitializerNoIn : "=" _ AssignmentExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 432
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 310
  LogicalORExprNoIn  go to state 311
  ConditionalExprNoIn  go to state 312
  AssignmentExprNoIn  go to state 482

state 457

 249) IterationStatement : FOR "(" VAR IDENT IN _ Expr ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 483

state 458

 267) WithStatement : WITH "(" Expr ")" Statement _

  $default      reduce using rule 267 (WithStatement)


state 459

 268) SwitchStatement : SWITCH "(" Expr ")" CaseBlock _

  $default      reduce using rule 268 (SwitchStatement)


state 460

 269) CaseBlock : "{" _ CaseClausesOpt "}"
 270) CaseBlock : "{" _ CaseClausesOpt DefaultClause CaseClausesOpt "}"

  CASE          shift, and go to state 487
  $default      reduce using rule 271 (CaseClausesOpt)

  CaseClausesOpt  go to state 484
  CaseClauses   go to state 485
  CaseClause    go to state 486

state 461

 281) TryStatement : TRY Block CATCH "(" IDENT _ ")" Block
 282) TryStatement : TRY Block CATCH "(" IDENT _ ")" Block FINALLY Block

  ")"           shift, and go to state 488


state 462

 285) FunctionDeclaration : FUNCTION IDENT "(" ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  FunctionBody  go to state 489
  SourceElements  go to state 468

state 463

 286) FunctionDeclaration : FUNCTION IDENT "(" FormalParameterList ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 490


state 464

  32) Property : IDENT IDENT "(" ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 491


state 465

  33) Property : IDENT IDENT "(" FormalParameterList _ ")" "{" FunctionBody "}"
 292) FormalParameterList : FormalParameterList _ "," IDENT

  ")"           shift, and go to state 492
  ","           shift, and go to state 422


state 466

 190) ConditionalExpr : LogicalORExpr "?" AssignmentExpr ":" AssignmentExpr _

  $default      reduce using rule 190 (ConditionalExpr)


state 467

 287) FunctionExpr : FUNCTION "(" ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 493


state 468

 293) FunctionBody : SourceElements _

  $default      reduce using rule 293 (FunctionBody)


state 469

 288) FunctionExpr : FUNCTION "(" FormalParameterList ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  FunctionBody  go to state 494
  SourceElements  go to state 468

state 470

 292) FormalParameterList : FormalParameterList "," IDENT _

  $default      reduce using rule 292 (FormalParameterList)


state 471

 289) FunctionExpr : FUNCTION IDENT "(" ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  FunctionBody  go to state 495
  SourceElements  go to state 468

state 472

 290) FunctionExpr : FUNCTION IDENT "(" FormalParameterList ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 496


state 473

 242) IfStatement : IF "(" Expr ")" Statement ELSE _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 497

state 474

 243) IterationStatement : DO Statement WHILE "(" Expr ")" _ ";"
 244) IterationStatement : DO Statement WHILE "(" Expr ")" _ error

  error         shift, and go to state 499
  ";"           shift, and go to state 498


state 475

 248) IterationStatement : FOR "(" LeftHandSideExpr IN Expr ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 500

state 476

 192) ConditionalExprNoIn : LogicalORExprNoIn "?" AssignmentExprNoIn ":" _ AssignmentExprNoIn

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 432
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 304
  RelationalExprNoIn  go to state 305
  EqualityExprNoIn  go to state 306
  BitwiseANDExprNoIn  go to state 307
  BitwiseXORExprNoIn  go to state 308
  BitwiseORExprNoIn  go to state 309
  LogicalANDExprNoIn  go to state 310
  LogicalORExprNoIn  go to state 311
  AssignmentExprNoIn  go to state 501
  ConditionalExprNoIn  go to state 312

state 477

 246) IterationStatement : FOR "(" ExprNoInOpt ";" ExprOpt ";" _ ExprOpt ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  $default      reduce using rule 251 (ExprOpt)

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 451
  ExprOpt       go to state 502

state 478

 225) VariableDeclarationListNoIn : VariableDeclarationListNoIn "," VariableDeclarationNoIn _

  $default      reduce using rule 225 (VariableDeclarationListNoIn)


state 479

 228) VariableDeclarationNoIn : IDENT _
 229) VariableDeclarationNoIn : IDENT _ InitializerNoIn

  "="           shift, and go to state 456
  $default      reduce using rule 228 (VariableDeclarationNoIn)

  InitializerNoIn  go to state 503

state 480

 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn ";" ExprOpt _ ";" ExprOpt ")" Statement

  ";"           shift, and go to state 504


state 481

 250) IterationStatement : FOR "(" VAR IDENT InitializerNoIn IN _ Expr ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 505

state 482

 237) InitializerNoIn : "=" AssignmentExprNoIn _

  $default      reduce using rule 237 (InitializerNoIn)


state 483

 214) Expr : Expr _ "," AssignmentExpr
 249) IterationStatement : FOR "(" VAR IDENT IN Expr _ ")" Statement

  ")"           shift, and go to state 506
  ","           shift, and go to state 213


state 484

 269) CaseBlock : "{" CaseClausesOpt _ "}"
 270) CaseBlock : "{" CaseClausesOpt _ DefaultClause CaseClausesOpt "}"

  DEFAULT       shift, and go to state 509
  "}"           shift, and go to state 507

  DefaultClause  go to state 508

state 485

 272) CaseClausesOpt : CaseClauses _
 274) CaseClauses : CaseClauses _ CaseClause

  CASE          shift, and go to state 487
  $default      reduce using rule 272 (CaseClausesOpt)

  CaseClause    go to state 510

state 486

 273) CaseClauses : CaseClause _

  $default      reduce using rule 273 (CaseClauses)


state 487

 275) CaseClause : CASE _ Expr ":" SourceElements

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 511

state 488

 281) TryStatement : TRY Block CATCH "(" IDENT ")" _ Block
 282) TryStatement : TRY Block CATCH "(" IDENT ")" _ Block FINALLY Block

  "{"           shift, and go to state 65

  Block         go to state 512

state 489

 285) FunctionDeclaration : FUNCTION IDENT "(" ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 513


state 490

 286) FunctionDeclaration : FUNCTION IDENT "(" FormalParameterList ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  FunctionBody  go to state 514
  SourceElements  go to state 468

state 491

  32) Property : IDENT IDENT "(" ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  FunctionBody  go to state 515
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  SourceElements  go to state 468

state 492

  33) Property : IDENT IDENT "(" FormalParameterList ")" _ "{" FunctionBody "}"

  "{"           shift, and go to state 516


state 493

 287) FunctionExpr : FUNCTION "(" ")" "{" FunctionBody "}" _

  $default      reduce using rule 287 (FunctionExpr)


state 494

 288) FunctionExpr : FUNCTION "(" FormalParameterList ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 517


state 495

 289) FunctionExpr : FUNCTION IDENT "(" ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 518


state 496

 290) FunctionExpr : FUNCTION IDENT "(" FormalParameterList ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  FunctionBody  go to state 519
  SourceElements  go to state 468

state 497

 242) IfStatement : IF "(" Expr ")" Statement ELSE Statement _

  $default      reduce using rule 242 (IfStatement)


state 498

 243) IterationStatement : DO Statement WHILE "(" Expr ")" ";" _

  $default      reduce using rule 243 (IterationStatement)


state 499

 244) IterationStatement : DO Statement WHILE "(" Expr ")" error _

  $default      reduce using rule 244 (IterationStatement)


state 500

 248) IterationStatement : FOR "(" LeftHandSideExpr IN Expr ")" Statement _

  $default      reduce using rule 248 (IterationStatement)


state 501

 192) ConditionalExprNoIn : LogicalORExprNoIn "?" AssignmentExprNoIn ":" AssignmentExprNoIn _

  $default      reduce using rule 192 (ConditionalExprNoIn)


state 502

 246) IterationStatement : FOR "(" ExprNoInOpt ";" ExprOpt ";" ExprOpt _ ")" Statement

  ")"           shift, and go to state 520


state 503

 229) VariableDeclarationNoIn : IDENT InitializerNoIn _

  $default      reduce using rule 229 (VariableDeclarationNoIn)


state 504

 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn ";" ExprOpt ";" _ ExprOpt ")" Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  DELETE        shift, and go to state 40
  FUNCTION      shift, and go to state 111
  NEW           shift, and go to state 92
  THIS          shift, and go to state 28
  TYPEOF        shift, and go to state 42
  VOID          shift, and go to state 41
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 87
  "("           shift, and go to state 32
  "{"           shift, and go to state 86
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  $default      reduce using rule 251 (ExprOpt)

  PrimaryExprNoBrace  go to state 85
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExpr   go to state 89
  FunctionExpr  go to state 90
  MemberExpr    go to state 91
  CallExpr      go to state 93
  NewExpr       go to state 94
  LeftHandSideExpr  go to state 95
  PostfixExpr   go to state 96
  UnaryExprCommon  go to state 97
  UnaryExpr     go to state 98
  MultiplicativeExpr  go to state 99
  AdditiveExpr  go to state 100
  ShiftExpr     go to state 101
  RelationalExpr  go to state 102
  EqualityExpr  go to state 103
  BitwiseANDExpr  go to state 104
  BitwiseXORExpr  go to state 105
  BitwiseORExpr  go to state 106
  LogicalANDExpr  go to state 107
  LogicalORExpr  go to state 108
  ConditionalExpr  go to state 109
  AssignmentExpr  go to state 110
  Expr          go to state 451
  ExprOpt       go to state 521

state 505

 214) Expr : Expr _ "," AssignmentExpr
 250) IterationStatement : FOR "(" VAR IDENT InitializerNoIn IN Expr _ ")" Statement

  ")"           shift, and go to state 522
  ","           shift, and go to state 213


state 506

 249) IterationStatement : FOR "(" VAR IDENT IN Expr ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 523

state 507

 269) CaseBlock : "{" CaseClausesOpt "}" _

  $default      reduce using rule 269 (CaseBlock)


state 508

 270) CaseBlock : "{" CaseClausesOpt DefaultClause _ CaseClausesOpt "}"

  CASE          shift, and go to state 487
  $default      reduce using rule 271 (CaseClausesOpt)

  CaseClausesOpt  go to state 524
  CaseClauses   go to state 485
  CaseClause    go to state 486

state 509

 276) DefaultClause : DEFAULT _ ":" SourceElements

  ":"           shift, and go to state 525


state 510

 274) CaseClauses : CaseClauses CaseClause _

  $default      reduce using rule 274 (CaseClauses)


state 511

 214) Expr : Expr _ "," AssignmentExpr
 275) CaseClause : CASE Expr _ ":" SourceElements

  ":"           shift, and go to state 526
  ","           shift, and go to state 213


state 512

 281) TryStatement : TRY Block CATCH "(" IDENT ")" Block _
 282) TryStatement : TRY Block CATCH "(" IDENT ")" Block _ FINALLY Block

  FINALLY       shift, and go to state 527
  $default      reduce using rule 281 (TryStatement)


state 513

 285) FunctionDeclaration : FUNCTION IDENT "(" ")" "{" FunctionBody "}" _

  $default      reduce using rule 285 (FunctionDeclaration)


state 514

 286) FunctionDeclaration : FUNCTION IDENT "(" FormalParameterList ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 528


state 515

  32) Property : IDENT IDENT "(" ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 529


state 516

  33) Property : IDENT IDENT "(" FormalParameterList ")" "{" _ FunctionBody "}"

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  FunctionBody  go to state 530
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  SourceElements  go to state 468

state 517

 288) FunctionExpr : FUNCTION "(" FormalParameterList ")" "{" FunctionBody "}" _

  $default      reduce using rule 288 (FunctionExpr)


state 518

 289) FunctionExpr : FUNCTION IDENT "(" ")" "{" FunctionBody "}" _

  $default      reduce using rule 289 (FunctionExpr)


state 519

 290) FunctionExpr : FUNCTION IDENT "(" FormalParameterList ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 531


state 520

 246) IterationStatement : FOR "(" ExprNoInOpt ";" ExprOpt ";" ExprOpt ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 532

state 521

 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt _ ")" Statement

  ")"           shift, and go to state 533


state 522

 250) IterationStatement : FOR "(" VAR IDENT InitializerNoIn IN Expr ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 534

state 523

 249) IterationStatement : FOR "(" VAR IDENT IN Expr ")" Statement _

  $default      reduce using rule 249 (IterationStatement)


state 524

 270) CaseBlock : "{" CaseClausesOpt DefaultClause CaseClausesOpt _ "}"

  "}"           shift, and go to state 535


state 525

 276) DefaultClause : DEFAULT ":" _ SourceElements

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  SourceElements  go to state 536

state 526

 275) CaseClause : CASE Expr ":" _ SourceElements

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  FUNCTION      shift, and go to state 81
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68
  $default      reduce using rule 1 (SourceElements)

  SourceElementList  go to state 2
  SourceElement  go to state 3
  FunctionDeclaration  go to state 4
  Statement     go to state 5
  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  SourceElements  go to state 537

state 527

 282) TryStatement : TRY Block CATCH "(" IDENT ")" Block FINALLY _ Block

  "{"           shift, and go to state 65

  Block         go to state 538

state 528

 286) FunctionDeclaration : FUNCTION IDENT "(" FormalParameterList ")" "{" FunctionBody "}" _

  $default      reduce using rule 286 (FunctionDeclaration)


state 529

  32) Property : IDENT IDENT "(" ")" "{" FunctionBody "}" _

  $default      reduce using rule 32 (Property)


state 530

  33) Property : IDENT IDENT "(" FormalParameterList ")" "{" FunctionBody _ "}"

  "}"           shift, and go to state 539


state 531

 290) FunctionExpr : FUNCTION IDENT "(" FormalParameterList ")" "{" FunctionBody "}" _

  $default      reduce using rule 290 (FunctionExpr)


state 532

 246) IterationStatement : FOR "(" ExprNoInOpt ";" ExprOpt ";" ExprOpt ")" Statement _

  $default      reduce using rule 246 (IterationStatement)


state 533

 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt ")" _ Statement

  NULL          shift, and go to state 22
  TRUE          shift, and go to state 23
  FALSE         shift, and go to state 24
  BREAK         shift, and go to state 74
  CONST         shift, and go to state 67
  CONTINUE      shift, and go to state 73
  DEBUGGER      shift, and go to state 80
  DELETE        shift, and go to state 40
  DO            shift, and go to state 70
  FOR           shift, and go to state 72
  IF            shift, and go to state 69
  NEW           shift, and go to state 36
  RETURN        shift, and go to state 75
  SWITCH        shift, and go to state 77
  THIS          shift, and go to state 28
  THROW         shift, and go to state 78
  TRY           shift, and go to state 79
  TYPEOF        shift, and go to state 42
  VAR           shift, and go to state 66
  VOID          shift, and go to state 41
  WHILE         shift, and go to state 71
  WITH          shift, and go to state 76
  PLUSPLUS      shift, and go to state 43
  MINUSMINUS    shift, and go to state 44
  REGEXP        shift, and go to state 27
  NUMBER        shift, and go to state 25
  STRING        shift, and go to state 26
  IDENT         shift, and go to state 31
  "("           shift, and go to state 32
  "{"           shift, and go to state 65
  "["           shift, and go to state 33
  "+"           shift, and go to state 45
  "-"           shift, and go to state 46
  "~"           shift, and go to state 47
  "!"           shift, and go to state 48
  ";"           shift, and go to state 68

  Block         go to state 6
  VariableStatement  go to state 7
  ConstStatement  go to state 8
  EmptyStatement  go to state 9
  ExprStatement  go to state 10
  IfStatement   go to state 11
  IterationStatement  go to state 12
  ContinueStatement  go to state 13
  BreakStatement  go to state 14
  ReturnStatement  go to state 15
  WithStatement  go to state 16
  SwitchStatement  go to state 17
  LabelledStatement  go to state 18
  ThrowStatement  go to state 19
  TryStatement  go to state 20
  DebuggerStatement  go to state 21
  Literal       go to state 29
  ArrayLiteral  go to state 30
  PrimaryExprNoBrace  go to state 34
  MemberExprNoBF  go to state 35
  CallExprNoBF  go to state 37
  NewExprNoBF   go to state 38
  LeftHandSideExprNoBF  go to state 39
  PostfixExprNoBF  go to state 49
  UnaryExprCommon  go to state 50
  UnaryExprNoBF  go to state 51
  MultiplicativeExprNoBF  go to state 52
  AdditiveExprNoBF  go to state 53
  ShiftExprNoBF  go to state 54
  RelationalExprNoBF  go to state 55
  EqualityExprNoBF  go to state 56
  BitwiseANDExprNoBF  go to state 57
  BitwiseXORExprNoBF  go to state 58
  BitwiseORExprNoBF  go to state 59
  LogicalANDExprNoBF  go to state 60
  LogicalORExprNoBF  go to state 61
  ConditionalExprNoBF  go to state 62
  AssignmentExprNoBF  go to state 63
  ExprNoBF      go to state 64
  Statement     go to state 540

state 534

 250) IterationStatement : FOR "(" VAR IDENT InitializerNoIn IN Expr ")" Statement _

  $default      reduce using rule 250 (IterationStatement)


state 535

 270) CaseBlock : "{" CaseClausesOpt DefaultClause CaseClausesOpt "}" _

  $default      reduce using rule 270 (CaseBlock)


state 536

 276) DefaultClause : DEFAULT ":" SourceElements _

  $default      reduce using rule 276 (DefaultClause)


state 537

 275) CaseClause : CASE Expr ":" SourceElements _

  $default      reduce using rule 275 (CaseClause)


state 538

 282) TryStatement : TRY Block CATCH "(" IDENT ")" Block FINALLY Block _

  $default      reduce using rule 282 (TryStatement)


state 539

  33) Property : IDENT IDENT "(" FormalParameterList ")" "{" FunctionBody "}" _

  $default      reduce using rule 33 (Property)


state 540

 247) IterationStatement : FOR "(" VAR VariableDeclarationListNoIn ";" ExprOpt ";" ExprOpt ")" Statement _

  $default      reduce using rule 247 (IterationStatement)

